<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://yourdomain.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://yourdomain.com/" rel="alternate" type="text/html" /><updated>2024-07-30T01:21:19+00:00</updated><id>http://yourdomain.com/feed.xml</id><title type="html">Your Site Title</title><subtitle>This is an example site description. You can use Markdown here.</subtitle><entry><title type="html">Canada PR application (after provincial nomination)</title><link href="http://yourdomain.com/2024/07/27/canada-pr-application.html" rel="alternate" type="text/html" title="Canada PR application (after provincial nomination)" /><published>2024-07-27T00:00:00+00:00</published><updated>2024-07-27T00:00:00+00:00</updated><id>http://yourdomain.com/2024/07/27/canada-pr-application</id><content type="html" xml:base="http://yourdomain.com/2024/07/27/canada-pr-application.html"><![CDATA[<h2 id="emails">Emails</h2>

<ul>
  <li>
    <p>from PNPInfo@gov.bc.ca</p>

    <p>BC Provincial Nominee Program</p>

    <p>[Mailing Address]</p>

    <p>The attached certificate confirms that you have been nominated for the Provincial Nominee Program. You must apply to Immigration, Refugees and Citizenship Canada (IRCC)  <strong>before the nomination expiry date listed on the certificate.  Please note this is not valid for Express Entry.</strong></p>

    <p>Visit IRCC’s website (<a href="https://www.canada.ca/en/immigration-refugees-citizenship/services/immigrate-canada/provincial-nominees/non-express-entry/apply.html">IRCC Non-Express Entry Provincial Nominee</a>) for instructions and forms for applying for permanent residence for a non-Express Entry nominee.  <strong>IRCC must receive your complete application before the nomination certificate expiry date indicated.</strong></p>

    <p>As a BC PNP Nominee, if you are considering a real estate purchase please review <a href="https://www2.gov.bc.ca/gov/content/taxes/property-taxes/property-transfer-tax/additional-property-transfer-tax#:~:text=B.C. Provincial Nominees">this important information from the Ministry of Finance.</a></p>

    <p>Please refer to our <a href="https://www.welcomebc.ca/immigrate-to-b-c/guides-forms-reports-documents">Post Nomination Guide</a> for further information.</p>

    <p>Please be aware that Immigration, Refugees and Citizenship Canada is responsible for conducting medical, criminal, and security screening processes and only their officers have the authority to make the final determination as to whether you meet the requirements to become a permanent resident.</p>

    <p>Sincerely,</p>

    <p>BC Provincial Nominee Program
Email: PNPInfo@gov.bc.ca
Website: WelcomeBC.ca/PNP</p>

    <p>This communication is intended for the use of the recipient to whom it is addressed, and may contain confidential, personal and/or privileged information. Please contact us immediately if you are not the intended recipient of this communication, and do not copy, distribute, or take action relying on it. A communication received in error, or subsequent reply, should be deleted or destroyed.</p>
  </li>
</ul>

<h2 id="references">References</h2>

<p><a href="https://www.welcomebc.ca/immigrate-to-b-c/bc-pnp-si-post-nomination-guide-pdf">Skills Immigration Post-Nomination Guide (PDF, 1MB)</a></p>

<p><a href="https://www.canada.ca/en/immigration-refugees-citizenship/services/immigrate-canada/provincial-nominees/non-express-entry/apply.html">Application process for non-EE PNP application</a></p>

<h2 id="in-canada-applicants">In-Canada applicants</h2>

<p>IRCC has put in place a <a href="https://www.canada.ca/en/immigration-refugees-citizenship/news/notices/2022-foreign-exempt-ime.html">temporary public policy</a> for immigration medical exams (IMEs) <strong>until October 6, 2024</strong>.</p>

<p>If you completed an IME within 5 years of submitting your new application, include the IME number (or the unique medical identifier number) from your previous exam in your current application.</p>

<p>You may be exempt from completing another IME if you meet <strong>all</strong> of these conditions:</p>

<ul>
  <li>You applied, or are applying, for either permanent residence or temporary residence.</li>
  <li>You already live in Canada.</li>
  <li>You completed your previous IME in the last 5 years.</li>
  <li>Your previous IME indicated a low risk or no risk to public health or public safety.</li>
</ul>

<h2 id="checklist">Checklist</h2>

<p>https://www.canada.ca/en/immigration-refugees-citizenship/services/application/application-forms-guides/guide-p7000-application-permanent-residence-provincial-nominee-class.html</p>

<h3 id="supporting-documents-for-provincial-nominee-program-pnp-required">Supporting Documents for Provincial Nominee Program (PNP) <strong>(required)</strong></h3>

<p>Upload all of the required supporting documents for your immigration program.</p>

<p><strong>Document labelling:</strong></p>

<p>If you have more than one document to upload under any one category, upload each one separately with a unique name (for example: Police_Certificate1, Police_Certificate2, Police_Certificate3).</p>

<ul>
  <li>Use this naming convention to label your documents: “Last Name - First Name – Document type - #.” For example: “Wong - John - Proof of Education -1.”</li>
  <li>Visit the <a href="https://www.canada.ca/en/immigration-refugees-citizenship/services/new-immigrants/pr-card/apply-renew-replace/photo.html">guide(opens in a new browser tab)</a> for permanent resident photos for instructions.</li>
  <li><strong>Accepted file types:</strong> PDF, JPG, JPEG, PNG, DOC, and DOCX</li>
  <li><strong>Accepted file size:</strong> File size should be 4 MB maximum and photos should be 420x540 pixels minimum.</li>
  <li><strong>Accepted characters for file names:</strong> File names can only contain the following characters: “A-Z” “a-z” “0-9” “-“ “_” “.”</li>
</ul>

<ol>
  <li>Travel documents and passports</li>
  <li>Confirmation of nomination
    <ul>
      <li>Sent by PNPInfo@gov.bc.ca</li>
    </ul>
  </li>
  <li>Proof of language proficiency
    <ul>
      <li>Not required for BCPNP-IPG non-EE stream</li>
    </ul>
  </li>
  <li><a href="https://www.canada.ca/en/immigration-refugees-citizenship/services/application/medical-police/police-certificates/about.html">Police certificates and clearances</a>
    <ul>
      <li>Provide clearances for any place you have lived for more than 6 months, excluding Canada.</li>
      <li>Accredited translation if the original copy is not in English.</li>
    </ul>
  </li>
  <li><a href="https://www.canada.ca/en/immigration-refugees-citizenship/services/new-immigrants/pr-card/apply-renew-replace/photo.html">Photos</a></li>
  <li>Birth certificates
    <ul>
      <li>Accredited translation if the original copy is not in English.</li>
    </ul>
  </li>
</ol>

<h2 id="additional-notes">Additional notes</h2>

<h3 id="apply-for-trv-in-canada">Apply for TRV in Canada</h3>

<ul>
  <li><a href="https://www.canada.ca/en/immigration-refugees-citizenship/services/application/account/where-submit-passport.html">mailing instructions after receiving OPR</a></li>
</ul>

<p>If you applied for a new temporary resident visa, or a study or temporary work permit from within Canada you</p>

<ul>
  <li>must <strong>mail us</strong> your passport</li>
  <li>can’t submit your passport in person</li>
</ul>

<p>Read the details in your passport request letter and follow the instructions below.</p>

<p>You should <strong>wait until you have your passport back before booking travel outside Canada</strong>.</p>

<h5 id="mailing-instructions">Mailing instructions</h5>

<ul>
  <li>Send us your passport by mail (Canada Post) or courier. Choose and pay for a mailing service:
    <ul>
      <li>If you’re not using a courier service, we recommend you use Canada Post’s Xpresspost or Priority Post services so you can track your envelopes.</li>
      <li>The mailing service you choose will determine how fast it will take for your passport to be returned to you.</li>
    </ul>
  </li>
  <li>Purchase 2 prepaid envelopes:
    <ul>
      <li>If you live in Ontario or Quebec, purchase <strong>regional envelopes</strong>.</li>
      <li>If you live in another province or territory, purchase <strong>national envelopes</strong>.</li>
    </ul>
  </li>
  <li>Envelope sizes:
    <ul>
      <li>To send us your passport:
        <ul>
          <li>1 letter-size envelope (318 x 241 mm)</li>
        </ul>
      </li>
      <li>For us to mail you back your passport:
        <ul>
          <li>1 standard-size envelope (260 x 159 mm)</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Write down the tracking numbers for both envelopes. To track your envelopes with Canada Post or with your courier service:</p>

    <ul>
      <li>Use the tracking number for the letter-size envelope to find out when <strong>we receive your passport at our office</strong>.</li>
      <li>Use the tracking number for the return envelope (standard-size), to find out <strong>when we mail it back to you</strong>.</li>
    </ul>
  </li>
  <li>
    <p>Prepare your package:</p>

    <ul>
      <li>Write your <strong>full</strong> mailing address on the return envelope (standard-size) in the “Deliver to” field.</li>
      <li>In the letter-size envelope, put:
        <ul>
          <li>your passport</li>
          <li>a copy of your passport request letter showing your unique client identifier (UCI) and application numbers</li>
          <li>the return envelope with your address on it</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Mailing addresses</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Canada Post address
  
Temporary Resident Visa Section
CPC-Ottawa (e-Application)
PO Box 9640
Ottawa, Ontario
K1G 6T2
  
===============================
  
Courier address
  
Temporary Resident Visa Section
CPC-Ottawa (e-Application)
365 Laurier Avenue West
Ottawa, Ontario
K1A 1L1
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[Emails]]></summary></entry><entry><title type="html">Angular Notes</title><link href="http://yourdomain.com/2024/07/22/angular-notes.html" rel="alternate" type="text/html" title="Angular Notes" /><published>2024-07-22T00:00:00+00:00</published><updated>2024-07-22T00:00:00+00:00</updated><id>http://yourdomain.com/2024/07/22/angular-notes</id><content type="html" xml:base="http://yourdomain.com/2024/07/22/angular-notes.html"><![CDATA[<h2 id="bindings">Bindings</h2>

<h3 id="interpolation-binding-">Interpolation binding (``)</h3>

<ul>
  <li>cannot interpolate arbitrary javascript commands, instead, calling functions from that component</li>
</ul>

<h3 id="property-binding-">Property binding (<code class="language-plaintext highlighter-rouge">[]</code>)</h3>

<h3 id="event-binding-">Event binding (<code class="language-plaintext highlighter-rouge">()</code>)</h3>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span><span class="nx">Component</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>

<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">app-root</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">styleUrls</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">app.component.css</span><span class="dl">'</span><span class="p">],</span>
  <span class="na">template</span><span class="p">:</span> <span class="s2">`
  &lt;div&gt;
    &lt;input type="text" (change)="onChange($event)" /&gt;
    &lt;p&gt;&lt;/p&gt;
  &lt;/div&gt;
  `</span><span class="p">,</span>
  <span class="na">standalone</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
<span class="p">})</span>

<span class="k">export</span> <span class="kd">class</span> <span class="nx">AppComponent</span> <span class="p">{</span>
  <span class="nl">isEditable</span><span class="p">:</span><span class="nx">boolean</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>

  <span class="nl">value</span><span class="p">:</span> <span class="kr">string</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>

  <span class="nx">onChange</span><span class="p">(</span><span class="nx">event</span><span class="p">:</span> <span class="nx">Event</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">inputElem</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span> <span class="k">as</span> <span class="nx">HTMLInputElement</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">inputElem</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<ul>
  <li>
    <p>A list of events</p>

    <h4 id="mouse-events">Mouse Events</h4>

    <ul>
      <li><strong>(click)</strong>: Triggered when an element is clicked.</li>
      <li><strong>(dblclick)</strong>: Triggered when an element is double-clicked.</li>
      <li><strong>(mousedown)</strong>: Triggered when a mouse button is pressed on an element.</li>
      <li><strong>(mouseup)</strong>: Triggered when a mouse button is released over an element.</li>
      <li><strong>(mouseenter)</strong>: Triggered when the mouse pointer enters the element.</li>
      <li><strong>(mouseleave)</strong>: Triggered when the mouse pointer leaves the element.</li>
      <li><strong>(mousemove)</strong>: Triggered when the mouse pointer is moved over the element.</li>
      <li><strong>(mouseover)</strong>: Triggered when the mouse pointer is moved onto the element.</li>
      <li><strong>(mouseout)</strong>: Triggered when the mouse pointer is moved out of the element.</li>
      <li><strong>(contextmenu)</strong>: Triggered when the right mouse button is clicked to open a context menu.</li>
    </ul>

    <h4 id="keyboard-events">Keyboard Events</h4>

    <ul>
      <li><strong>(keydown)</strong>: Triggered when a key is pressed.</li>
      <li><strong>(keypress)</strong>: Triggered when a key is pressed and held.</li>
      <li><strong>(keyup)</strong>: Triggered when a key is released.</li>
    </ul>

    <h4 id="focus-events">Focus Events</h4>

    <ul>
      <li><strong>(focus)</strong>: Triggered when an element gains focus.</li>
      <li><strong>(blur)</strong>: Triggered when an element loses focus.</li>
    </ul>

    <h4 id="form-events">Form Events</h4>

    <ul>
      <li><strong>(input)</strong>: Triggered when the value of an input element changes.</li>
      <li><strong>(change)</strong>: Triggered when the value of an input element changes and the element loses focus.</li>
      <li><strong>(submit)</strong>: Triggered when a form is submitted.</li>
      <li><strong>(reset)</strong>: Triggered when a form is reset.</li>
    </ul>

    <h4 id="drag-and-drop-events">Drag and Drop Events</h4>

    <ul>
      <li><strong>(drag)</strong>: Triggered when an element is being dragged.</li>
      <li><strong>(dragstart)</strong>: Triggered when the user starts dragging an element.</li>
      <li><strong>(dragend)</strong>: Triggered when the user stops dragging an element.</li>
      <li><strong>(dragenter)</strong>: Triggered when a dragged element enters a drop target.</li>
      <li><strong>(dragleave)</strong>: Triggered when a dragged element leaves a drop target.</li>
      <li><strong>(dragover)</strong>: Triggered when an element is being dragged over a drop target.</li>
      <li><strong>(drop)</strong>: Triggered when a dragged element is dropped on a drop target.</li>
    </ul>

    <h4 id="clipboard-events">Clipboard Events</h4>

    <ul>
      <li><strong>(copy)</strong>: Triggered when content is copied to the clipboard.</li>
      <li><strong>(cut)</strong>: Triggered when content is cut to the clipboard.</li>
      <li><strong>(paste)</strong>: Triggered when content is pasted from the clipboard.</li>
    </ul>

    <h4 id="touch-events">Touch Events</h4>

    <ul>
      <li><strong>(touchstart)</strong>: Triggered when a touch point is placed on the touch surface.</li>
      <li><strong>(touchmove)</strong>: Triggered when a touch point is moved along the touch surface.</li>
      <li><strong>(touchend)</strong>: Triggered when a touch point is removed from the touch surface.</li>
      <li><strong>(touchcancel)</strong>: Triggered when a touch event is interrupted.</li>
    </ul>

    <h4 id="miscellaneous-events">Miscellaneous Events</h4>

    <ul>
      <li><strong>(scroll)</strong>: Triggered when the user scrolls an element.</li>
      <li><strong>(resize)</strong>: Triggered when the window is resized.</li>
      <li><strong>(error)</strong>: Triggered when an error occurs.</li>
      <li><strong>(load)</strong>: Triggered when an element or resource finishes loading.</li>
      <li><strong>(unload)</strong>: Triggered when the document or a resource is being unloaded.</li>
    </ul>

    <h4 id="custom-events">Custom Events</h4>

    <ul>
      <li><strong>(ngModelChange)</strong>: Triggered when the value of a form control bound with <code class="language-plaintext highlighter-rouge">[(ngModel)]</code> changes.</li>
    </ul>
  </li>
</ul>

<h3 id="two-way-data-binding----use-formsmodule-to-handle-form-value-changes">Two-way data binding (<code class="language-plaintext highlighter-rouge">[()]</code>) - use <code class="language-plaintext highlighter-rouge">FormsModule</code> to handle form value changes</h3>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span><span class="nx">Component</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">FormsModule</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/forms</span><span class="dl">'</span><span class="p">;</span>

<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">app-root</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">styleUrls</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">app.component.css</span><span class="dl">'</span><span class="p">],</span>
  <span class="na">template</span><span class="p">:</span> <span class="s2">`
  &lt;div&gt;
    &lt;input type="text" [(ngModel)]="value" /&gt;
    &lt;p&gt;&lt;/p&gt;
  &lt;/div&gt;
  `</span><span class="p">,</span>
  <span class="na">standalone</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="na">imports</span><span class="p">:</span> <span class="p">[</span><span class="nx">FormsModule</span><span class="p">]</span>
<span class="p">})</span>

<span class="k">export</span> <span class="kd">class</span> <span class="nx">AppComponent</span> <span class="p">{</span>
  <span class="nl">isEditable</span><span class="p">:</span><span class="nx">boolean</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>

  <span class="nl">value</span><span class="p">:</span> <span class="kr">string</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>

  <span class="nx">onChange</span><span class="p">(</span><span class="nx">event</span><span class="p">:</span> <span class="nx">Event</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">inputElem</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span> <span class="k">as</span> <span class="nx">HTMLInputElement</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">inputElem</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<h2 id="component-communication">Component communication</h2>

<h3 id="input"><code class="language-plaintext highlighter-rouge">@Input</code></h3>

<p>For receiving values from other components.</p>

<h3 id="output"><code class="language-plaintext highlighter-rouge">@Output</code></h3>

<p>For notifying other components that a event has happened.</p>

<p>child component - output an event emitter for emitting a string - emitter can be treated as a source of event, like (change), (click) and others.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span><span class="nx">Component</span><span class="p">,</span> <span class="nx">Output</span><span class="p">,</span> <span class="nx">EventEmitter</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>

<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">app-child</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">styles</span><span class="p">:</span> <span class="s2">`.btn { padding: 5px; }`</span><span class="p">,</span>
  <span class="na">template</span><span class="p">:</span> <span class="s2">`
    &lt;button class="btn" (click)="addItem()"&gt;Add Item&lt;/button&gt;
  `</span><span class="p">,</span>
  <span class="na">standalone</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">ChildComponent</span> <span class="p">{</span>
  <span class="p">@</span><span class="nd">Output</span><span class="p">()</span> <span class="nx">addItemEvent</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">EventEmitter</span><span class="o">&lt;</span><span class="kr">string</span><span class="o">&gt;</span><span class="p">();</span>

  <span class="nx">addItem</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">addItemEvent</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="dl">'</span><span class="s1">🐢</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<p>parent component - use an emitter from child component as an event binding to handle events.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span><span class="nx">Component</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">ChildComponent</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./child.component</span><span class="dl">'</span><span class="p">;</span>

<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">app-root</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">template</span><span class="p">:</span> <span class="s2">`
    &lt;app-child (addItemEvent)="addItem($event)" /&gt;
    &lt;p&gt;🐢 all the way down &lt;/p&gt;
  `</span><span class="p">,</span>
  <span class="na">standalone</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="na">imports</span><span class="p">:</span> <span class="p">[</span><span class="nx">ChildComponent</span><span class="p">],</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">AppComponent</span> <span class="p">{</span>
  <span class="nx">items</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">();</span>

  <span class="nx">addItem</span><span class="p">(</span><span class="nx">item</span><span class="p">:</span> <span class="kr">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[Bindings]]></summary></entry><entry><title type="html">Configure a TypeScript project with CI/CD</title><link href="http://yourdomain.com/2024/07/16/configure-a-ts-project.html" rel="alternate" type="text/html" title="Configure a TypeScript project with CI/CD" /><published>2024-07-16T00:00:00+00:00</published><updated>2024-07-16T00:00:00+00:00</updated><id>http://yourdomain.com/2024/07/16/configure-a-ts-project</id><content type="html" xml:base="http://yourdomain.com/2024/07/16/configure-a-ts-project.html"><![CDATA[<blockquote>
  <p>[!NOTE]</p>

  <p>The project to be configured:</p>

  <table>
    <thead>
      <tr>
        <th> </th>
        <th>Value</th>
        <th>Note</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td> </td>
        <td>multi-stage-cd</td>
        <td> </td>
      </tr>
      <tr>
        <td> </td>
        <td> </td>
        <td> </td>
      </tr>
      <tr>
        <td> </td>
        <td> </td>
        <td> </td>
      </tr>
    </tbody>
  </table>

</blockquote>

<h2 id="initialize-the-project">Initialize the project</h2>

<ol>
  <li>
    <p>Make the directory</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir </span>multi-stage-cd
<span class="nb">cd </span>multi-stage-cd
</code></pre></div>    </div>
  </li>
  <li>
    <p>Initialize git repo</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git init
</code></pre></div>    </div>
  </li>
  <li>
    <p>Install typescript and node env for ts</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install typescript ts-node @types/node --save-dev
</code></pre></div>    </div>

    <p>(<code class="language-plaintext highlighter-rouge">--save-dev</code> flag indicates that the packages are necessary for development purposes.)</p>
  </li>
  <li>
    <p>Configure <code class="language-plaintext highlighter-rouge">.gitignore</code> to prevent packages being added to git repo</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"node_modules/*"</span> <span class="o">&gt;</span> .gitignore
</code></pre></div>    </div>
  </li>
  <li>
    <p>Initalize ts project</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tsc --init
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="configure-jest-test-env">Configure Jest test env</h2>

<ol>
  <li>
    <p>Install jest</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install </span>jest ts-jest @types/jest <span class="nt">--save-dev</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Configure jest</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npx ts-jest config:init
</code></pre></div>    </div>
  </li>
  <li>
    <p>Modify <code class="language-plaintext highlighter-rouge">tsconfig.json</code></p>

    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"compilerOptions"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"target"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ES6"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"module"</span><span class="p">:</span><span class="w"> </span><span class="s2">"commonjs"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"strict"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="nl">"esModuleInterop"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="nl">"outDir"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./dist"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"rootDir"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./src"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"include"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"src/**/*.ts"</span><span class="p">,</span><span class="w"> </span><span class="s2">"tests/**/*.ts"</span><span class="p">],</span><span class="w">
  </span><span class="nl">"exclude"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"node_modules"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>    </div>
  </li>
</ol>]]></content><author><name></name></author><summary type="html"><![CDATA[[!NOTE] The project to be configured:   Value Note   multi-stage-cd              ]]></summary></entry><entry><title type="html">AZ-500 notes</title><link href="http://yourdomain.com/2024/07/09/azure-500-notes.html" rel="alternate" type="text/html" title="AZ-500 notes" /><published>2024-07-09T00:00:00+00:00</published><updated>2024-07-09T00:00:00+00:00</updated><id>http://yourdomain.com/2024/07/09/azure-500-notes</id><content type="html" xml:base="http://yourdomain.com/2024/07/09/azure-500-notes.html"><![CDATA[<h2 id="manage-identity-and-access">Manage identity and access</h2>

<h3 id="groups">Groups</h3>

<h4 id="memberships">Memberships</h4>

<ul>
  <li>Assigned - manually assigned</li>
  <li>Dynamic user - automatically assigned by user’s attributes</li>
  <li>Dynamic device: automatically assigned on devices by attributes</li>
</ul>

<p><img src="https://learn.microsoft.com/en-ca/training/wwl-azure/manage-identities-microsoft-entra-id/media/microsoft-entra-identity-access-management-4ca9b9bc.png" alt="Diagram showing how access management in Microsoft Entra ID works." /></p>

<h4 id="assignments">Assignments</h4>

<ul>
  <li>Direct assignmnet</li>
  <li>Group assignment - Entra group to the resource, automatically gives all of the group members access to the resource</li>
  <li>Rule-based assignment</li>
  <li>External authority assignment - assigns a group to provide access to the resource and then the external source manages the group members</li>
</ul>

<h2 id="key-points-to-master">Key Points to Master</h2>

<h4 id="oauth2">OAuth2</h4>

<ul>
  <li>Understand the different grant types and their use cases.</li>
  <li>Learn how to implement the OAuth2 flow in client and server applications.</li>
  <li>Know how to secure and manage access tokens.</li>
  <li>Familiarize yourself with common OAuth2 libraries and tools.</li>
</ul>

<h4 id="oidc">OIDC</h4>

<ul>
  <li>Understand how OIDC builds on OAuth2 to provide identity verification.</li>
  <li>Learn the structure and usage of ID tokens.</li>
  <li>Implement OIDC in client applications to obtain user identity information.</li>
  <li>Understand the security considerations and best practices.</li>
</ul>

<h4 id="saml">SAML</h4>

<ul>
  <li>Understand the SAML assertion and its components.</li>
  <li>Learn how to configure and manage identity providers and service providers.</li>
  <li>Familiarize yourself with SSO implementations using SAML.</li>
  <li>Understand the security considerations and best practices.</li>
</ul>

<h4 id="entra-id">Entra ID</h4>

<ul>
  <li>Learn how to register and manage applications in Entra ID.</li>
  <li>Understand how to configure Entra ID for OAuth2, OIDC, and SAML.</li>
  <li>Know how to use Entra ID for user authentication and authorization in various applications.</li>
  <li>Understand the security features and best practices for Entra ID.</li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[Manage identity and access]]></summary></entry><entry><title type="html">Leetcode Notes</title><link href="http://yourdomain.com/2024/07/09/leetcode-notes.html" rel="alternate" type="text/html" title="Leetcode Notes" /><published>2024-07-09T00:00:00+00:00</published><updated>2024-07-09T00:00:00+00:00</updated><id>http://yourdomain.com/2024/07/09/leetcode-notes</id><content type="html" xml:base="http://yourdomain.com/2024/07/09/leetcode-notes.html"><![CDATA[<h2 id="1701-average-waiting-time">1701. Average waiting time</h2>

<p>A restaurant with single chef,</p>

<p>customers[i] = [arrival_i, time_i]</p>

<p>Chef prepares food for customers in the order they were given in the input.</p>

<p>return the average waitiing time of all customers</p>

<p>this question can be modelled as a non-preemptive single process at a time scheduling model.</p>

<p>Intuitative solution (in Python3):</p>

<pre><code class="language-python3">class Solution:
    def averageWaitingTime(self, customers: List[List[int]]) -&gt; float:
        # FCFS scheduling
        customers[0].append(customers[0][0] + customers[0][1])
        total_wait_time = customers[0][1]

        for i in range(1, len(customers)):
            prev_customer = customers[i-1]
            customer = customers[i]

            if customer[0] &lt; prev_customer[-1]:
                customer.append(prev_customer[-1] + customer[1])
            else:
                customer.append(customer[0]+customer[1])
            
            total_wait_time += customer[2] - customer[0]
            

        
        return total_wait_time/len(customers)
            
</code></pre>

<p>Java Tips:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// to initialize an array with the length of an existing array arr</span>
<span class="kt">int</span> <span class="n">newArr</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
</code></pre></div></div>

<p>Optimized:</p>

<ul>
  <li>it is not necessary to save all the finish times of each customer</li>
  <li>in the line <code class="language-plaintext highlighter-rouge">total_wait_time += customer[2] - customer[0]</code> , we just need to save the finish time of the previous customer, use a variable to iterate</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">averageWaitingTime</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">customers</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// finish time of the prev customer</span>
        <span class="kt">int</span> <span class="n">ft</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">double</span> <span class="n">allWaitingTime</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">customers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="c1">// current customer arrived later than the prev customer ends</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">customers</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">ft</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">ft</span> <span class="o">=</span> <span class="n">customers</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">+</span> <span class="n">customers</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="o">}</span> 
            <span class="c1">// current customer arrived no later than the prev customer ends</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="n">ft</span> <span class="o">=</span> <span class="n">ft</span> <span class="o">+</span> <span class="n">customers</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="o">}</span>
            <span class="n">allWaitingTime</span> <span class="o">+=</span> <span class="n">ft</span><span class="o">-</span><span class="n">customers</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">allWaitingTime</span><span class="o">/</span><span class="n">customers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>       
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="1598-crawler-log-folder">1598. Crawler log folder</h2>

<p>A very easy question…</p>

<pre><code class="language-Java">class Solution {
    public int minOperations(String[] logs) {
        int layer = 0;
        
        for(int i=0; i&lt;logs.length; i++) {
            if(logs[i].equals("../")) {
                layer = Math.max(0, layer-1);
            }
            else if (logs[i].equals("./")) {
                // no action - current dir
            } else {
                layer++;
            }
        }

        return layer;
    }
}
</code></pre>

<h2 id="1717-maximum-score-from-removing-substrings">1717. Maximum score from removing substrings</h2>

<p><strong>Preservation of Opportunities</strong>:</p>

<ul>
  <li>Removing higher-scoring pairs first does not diminish the opportunity to remove lower-scoring pairs later. For instance, after all “ba” pairs are removed from the string, it still contains “ab” pairs if they existed initially.</li>
  <li>If we reverse this order, i.e., remove lower-scoring pairs first, we might miss out on higher-scoring pairs that could have been formed by the initial configuration of the string.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">maximumGain</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">x</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="c1"># intuitive - recursion and search
</span>
        <span class="n">ab</span> <span class="o">=</span> <span class="s">"ab"</span>
        <span class="n">ba</span> <span class="o">=</span> <span class="s">"ba"</span>

        <span class="n">first</span> <span class="o">=</span> <span class="s">""</span>
        <span class="n">second</span> <span class="o">=</span> <span class="s">""</span>
        <span class="n">maxxy</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
        <span class="n">minxy</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">x</span><span class="o">&gt;</span><span class="n">y</span><span class="p">:</span>
            <span class="n">first</span> <span class="o">=</span> <span class="n">ab</span>
            <span class="n">second</span> <span class="o">=</span> <span class="n">ba</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">first</span> <span class="o">=</span> <span class="n">ba</span>
            <span class="n">second</span> <span class="o">=</span> <span class="n">ab</span>

        <span class="n">st</span> <span class="o">=</span> <span class="p">[]</span>

        <span class="n">it</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="k">while</span> <span class="n">it</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
            <span class="n">curr</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">it</span><span class="p">]</span>
            <span class="n">it</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">st</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">curr</span><span class="p">)</span>
                <span class="k">continue</span>
                
            <span class="n">prev</span> <span class="o">=</span> <span class="n">st</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>

            
            <span class="k">if</span> <span class="n">prev</span><span class="o">+</span><span class="n">curr</span> <span class="o">==</span> <span class="n">first</span><span class="p">:</span>
                <span class="n">score</span> <span class="o">+=</span> <span class="n">maxxy</span>
                <span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>

            <span class="k">else</span><span class="p">:</span>
                <span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">curr</span><span class="p">)</span>
            
           
        
        <span class="n">s</span> <span class="o">=</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">st</span><span class="p">)</span>
        <span class="n">st</span> <span class="o">=</span> <span class="p">[]</span>

        <span class="n">it</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="k">while</span> <span class="n">it</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
            <span class="n">curr</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">it</span><span class="p">]</span>
            <span class="n">it</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">st</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">curr</span><span class="p">)</span>
                <span class="k">continue</span>
                
            <span class="n">prev</span> <span class="o">=</span> <span class="n">st</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>

            
            <span class="k">if</span> <span class="n">prev</span><span class="o">+</span><span class="n">curr</span> <span class="o">==</span> <span class="n">second</span><span class="p">:</span>
                <span class="n">score</span> <span class="o">+=</span> <span class="n">minxy</span>
                <span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>

            <span class="k">else</span><span class="p">:</span>
                <span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">curr</span><span class="p">)</span>
            
            
        

        <span class="k">return</span> <span class="n">score</span>
                
        

        
</code></pre></div></div>

<h2 id="1530-number-of-good-leaf-node-pairs">1530. Number of good leaf node pairs</h2>

<ul>
  <li>use BFS - “distance” indicates that we need to search for pairs layer by layer</li>
  <li>construct a graph is necessary since we need to search bidirectionally – than tree having one-way references</li>
  <li>when searching in each layer, use the length of the queue as the number of nodes of this layer</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
</span><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    
    <span class="k">def</span> <span class="nf">_traverse_tree</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">curr_node</span><span class="p">:</span> <span class="n">TreeNode</span><span class="p">,</span> <span class="n">prev_node</span><span class="p">:</span> <span class="n">TreeNode</span><span class="p">,</span> <span class="n">graph</span><span class="p">:</span> <span class="nb">dict</span><span class="p">,</span> <span class="n">leaf_nodes</span><span class="p">:</span> <span class="nb">set</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">curr_node</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
            <span class="k">return</span>
        <span class="k">if</span> <span class="n">curr_node</span><span class="p">.</span><span class="n">left</span> <span class="ow">is</span> <span class="bp">None</span> <span class="ow">and</span> <span class="n">curr_node</span><span class="p">.</span><span class="n">right</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">leaf_nodes</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">curr_node</span><span class="p">)</span>
        
        <span class="k">if</span> <span class="n">prev_node</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">prev_node</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">:</span>
                <span class="n">graph</span><span class="p">[</span><span class="n">prev_node</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">graph</span><span class="p">[</span><span class="n">prev_node</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">curr_node</span><span class="p">)</span>

            <span class="k">if</span> <span class="n">curr_node</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">:</span>
                <span class="n">graph</span><span class="p">[</span><span class="n">curr_node</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">graph</span><span class="p">[</span><span class="n">curr_node</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">prev_node</span><span class="p">)</span>
        
        <span class="bp">self</span><span class="p">.</span><span class="n">_traverse_tree</span><span class="p">(</span><span class="n">curr_node</span><span class="p">.</span><span class="n">left</span><span class="p">,</span> <span class="n">curr_node</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">leaf_nodes</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_traverse_tree</span><span class="p">(</span><span class="n">curr_node</span><span class="p">.</span><span class="n">right</span><span class="p">,</span> <span class="n">curr_node</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">leaf_nodes</span><span class="p">)</span>
 
    <span class="k">def</span> <span class="nf">countPairs</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">root</span><span class="p">:</span> <span class="n">TreeNode</span><span class="p">,</span> <span class="n">distance</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="n">graph</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">leaf_nodes</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">_traverse_tree</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">leaf_nodes</span><span class="p">)</span>

        <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># begin of DFS
</span>
        <span class="k">for</span> <span class="n">leaf</span> <span class="ow">in</span> <span class="n">leaf_nodes</span><span class="p">:</span>
            <span class="n">queue</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">seen</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>
            <span class="n">queue</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">leaf</span><span class="p">)</span>
            <span class="n">seen</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">leaf</span><span class="p">)</span>

            <span class="c1"># visiting all nodes, start from the leaf node (distance is 0 at this time)
</span>            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">distance</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
                <span class="n">size</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">queue</span><span class="p">)</span>
                <span class="c1">#print(f"leaf:{leaf.val}, distance:{i}, size:{size}")
</span>                <span class="c1"># nodes of this distance
</span>                <span class="c1"># visit all nodes of i distance
</span>                <span class="c1"># add all nodes of i+1 distance
</span>                <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">size</span><span class="p">):</span>
                    <span class="n">curr_node</span> <span class="o">=</span> <span class="n">queue</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="c1"># bfs -- queue -&gt; popleft
</span>                    <span class="k">if</span> <span class="n">curr_node</span> <span class="ow">in</span> <span class="n">leaf_nodes</span> <span class="ow">and</span> <span class="n">curr_node</span> <span class="o">!=</span> <span class="n">leaf</span><span class="p">:</span>
                        <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span> <span class="c1"># a satisfied leaf node has been visited
</span>                    <span class="k">if</span> <span class="n">curr_node</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">:</span>
                        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">[</span><span class="n">curr_node</span><span class="p">]:</span>
                            <span class="k">if</span> <span class="n">_</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">seen</span><span class="p">:</span>
                                <span class="n">queue</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">_</span><span class="p">)</span>
                                <span class="n">seen</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">_</span><span class="p">)</span>
        
        <span class="k">return</span> <span class="n">count</span><span class="o">//</span><span class="mi">2</span>

</code></pre></div></div>

<h2 id="1380-lucky-numbers-in-a-matrix">1380. Lucky numbers in a matrix</h2>

<ul>
  <li>
    <p>Since matrix contains distinct numbers – we just need to get two sets, one is max values in cols and another is min values in rows.</p>
  </li>
  <li>
    <p>The intersection of this two sets is the answer.</p>

    <p>Proof that there is only one lucky numbers in a matrix – proof by contradicary</p>

    <ul>
      <li>
        <p>suppose that in a matrix, if two lucky numbers, X and Y exist</p>

        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a b X c
d Y e f
</code></pre></div>        </div>
      </li>
      <li>
        <p>since X is a lucky number - min of the row and max of the col: X &lt; b and X &gt; e</p>

        <ul>
          <li>in an axis:   —-e—-X—-b—-</li>
        </ul>
      </li>
      <li>
        <p>Y is also a lucky number: Y &lt; e and Y &gt; b</p>

        <ul>
          <li>in the above axis: –Y?—e—X—b—Y?—</li>
        </ul>
      </li>
      <li>
        <p>a contradiction arise - hence, only one lucky number can exist.</p>
      </li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">luckyNumbers</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">matrix</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]])</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]:</span>
        <span class="n">col_maxs</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>
        <span class="n">row_mins</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>

        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">matrix</span><span class="p">)):</span>
            <span class="n">row_mins</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="nb">min</span><span class="p">(</span><span class="n">matrix</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span>
        
        <span class="n">m_T</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="n">matrix</span><span class="p">))</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">m_T</span><span class="p">)):</span>
            <span class="n">col_maxs</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">m_T</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span>

        <span class="s">"""
        for i in range(len(matrix[0])):
            col_max = -1
            for j in range(len(matrix)):
                elem = matrix[j][i]
                if elem &gt; col_max:
                    col_max = elem
        
            col_maxs.add(col_max)
        """</span>

        <span class="s">"""
        class Solution:
            def luckyNumbers (self, matrix: List[List[int]]) -&gt; List[int]:
                return set(map(min,matrix)) &amp; set(map(max,zip(*matrix)))
        """</span>

        <span class="k">return</span> <span class="nb">list</span><span class="p">(</span><span class="n">col_maxs</span><span class="p">.</span><span class="n">intersection</span><span class="p">(</span><span class="n">row_mins</span><span class="p">))</span>
</code></pre></div></div>

<h2 id="912-sort-an-array---onlogn-complexity">912. Sort an array - o(nlogn) complexity</h2>

<ul>
  <li>
    <p>although quicksort is an optimized sorting algorithm, however in worst case, it takes o(n^2) times.</p>

    <ul>
      <li>
        <p>quicksort</p>

        <ul>
          <li>quicksort() and partiton()</li>
          <li>use index i to label the position that all elem before index i is less than the pivot.</li>
        </ul>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">sortArray</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">quicksort</span><span class="o">(</span><span class="n">nums</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
    
        <span class="k">return</span> <span class="n">nums</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">quicksort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">,</span> <span class="kt">int</span> <span class="n">low</span><span class="o">,</span> <span class="kt">int</span> <span class="n">high</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">low</span> <span class="o">&lt;</span> <span class="n">high</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">partitionIndex</span> <span class="o">=</span> <span class="n">partition</span><span class="o">(</span><span class="n">nums</span><span class="o">,</span> <span class="n">low</span><span class="o">,</span> <span class="n">high</span><span class="o">);</span>
    
            <span class="n">quicksort</span><span class="o">(</span><span class="n">nums</span><span class="o">,</span> <span class="n">low</span><span class="o">,</span> <span class="n">partitionIndex</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
            <span class="n">quicksort</span><span class="o">(</span><span class="n">nums</span><span class="o">,</span> <span class="n">partitionIndex</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">high</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">partition</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">,</span> <span class="kt">int</span> <span class="n">low</span><span class="o">,</span> <span class="kt">int</span> <span class="n">high</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">pivot</span> <span class="o">=</span> <span class="n">nums</span><span class="o">[</span><span class="n">high</span><span class="o">];</span>
    
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">(</span><span class="n">low</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
    
    
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">low</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span> <span class="n">high</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">pivot</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">i</span><span class="o">++;</span>
    
                <span class="c1">// all elements before index at i is less than the pivot</span>
                <span class="c1">// therefore, if elem at j is less than the pivot</span>
                <span class="c1">// swap elem at j with elem at i</span>
                <span class="c1">// in special circumstance - low...j is all less than the pivot, the swapping swaps the element by itself</span>
                <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
                <span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">nums</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
                <span class="n">nums</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    
        <span class="k">return</span> <span class="n">i</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>

<h2 id="2418-sort-the-people">2418. Sort the people</h2>

<ul>
  <li>easy solution - “distinct value in heights” - create a map mapping height to name, then sort the keys (heights), output the names in the sorted order.</li>
  <li>Or, sorting manually with quicksort.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">sortPeople</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">names</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">str</span><span class="p">],</span> <span class="n">heights</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="nb">str</span><span class="p">]:</span>
        <span class="n">height_dict</span> <span class="o">=</span> <span class="p">{</span><span class="n">h</span><span class="p">:</span><span class="n">n</span> <span class="k">for</span> <span class="n">h</span><span class="p">,</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">heights</span><span class="p">,</span> <span class="n">names</span><span class="p">)}</span>

        <span class="n">sorted_keys</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">k</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">height_dict</span><span class="p">.</span><span class="n">keys</span><span class="p">()),</span> <span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
        
        <span class="k">return</span> <span class="p">[</span><span class="n">height_dict</span><span class="p">[</span><span class="n">height</span><span class="p">]</span> <span class="k">for</span> <span class="n">height</span> <span class="ow">in</span> <span class="n">sorted_keys</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="1636-sort-array-by-increasing-frequency">1636. Sort array by increasing frequency</h2>

<ul>
  <li>
    <p>Count the frequency for each number into pairs</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># initial attempt
</span><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">frequencySort</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]:</span>
        <span class="n">reversedlookup</span> <span class="o">=</span> <span class="p">{}</span>
  
        <span class="n">n_min</span> <span class="o">=</span> <span class="o">-</span><span class="mi">100</span>
        <span class="n">n_max</span> <span class="o">=</span> <span class="mi">100</span>
  
        <span class="n">frequency</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_min</span><span class="p">,</span> <span class="n">n_max</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>
          
        <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">nums</span><span class="p">:</span>
            <span class="n">frequency</span><span class="p">[</span><span class="n">num</span><span class="o">-</span><span class="n">n_min</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
          
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">frequency</span><span class="p">)):</span>
            <span class="n">num</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="n">n_min</span>
            <span class="n">freq</span> <span class="o">=</span> <span class="n">frequency</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
            <span class="k">if</span> <span class="n">freq</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">freq</span> <span class="ow">in</span> <span class="n">reversedlookup</span><span class="p">:</span>
                    <span class="n">reversedlookup</span><span class="p">[</span><span class="n">freq</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">reversedlookup</span><span class="p">[</span><span class="n">freq</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">num</span><span class="p">]</span>
          
        <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="n">sorted_keys</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">reversedlookup</span><span class="p">.</span><span class="n">keys</span><span class="p">())</span>
          
        <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">sorted_keys</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">reversedlookup</span><span class="p">[</span><span class="n">k</span><span class="p">],</span> <span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
                <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">k</span><span class="p">):</span>
                    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">elem</span><span class="p">)</span>
          
  
        <span class="k">return</span> <span class="n">result</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Sort the frequency by key</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">frequencySort</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]:</span>
        <span class="n">freq</span> <span class="o">=</span> <span class="p">{}</span>
  
        <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">nums</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">freq</span><span class="p">:</span>
                <span class="n">freq</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">freq</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
          
        <span class="n">result</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">nums</span><span class="p">,</span> <span class="n">key</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="p">(</span><span class="n">freq</span><span class="p">[</span><span class="n">x</span><span class="p">],</span> <span class="o">-</span><span class="n">x</span><span class="p">))</span> <span class="c1"># by the frequency first, if they have the same frequency, sort the numbers in decreasing order
</span>  
        <span class="k">return</span> <span class="n">result</span>
              
  
          
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="2058-find-the-minimum-and-maximum-number-of-nodes-between-critical-points"><a href="https://leetcode.com/problems/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/">2058. Find the Minimum and Maximum Number of Nodes Between Critical Points</a></h2>

<h2 id="2191-sort-the-jumbled-numbers">2191. Sort the jumbled numbers</h2>

<ul>
  <li>design a key that jumbles numbers.</li>
  <li>use sorted to sort <code class="language-plaintext highlighter-rouge">nums</code> using that key</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">convert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mapping</span><span class="p">,</span> <span class="n">num</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">mapping</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

        <span class="n">val</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="k">while</span> <span class="n">num</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">digit</span> <span class="o">=</span> <span class="n">num</span> <span class="o">%</span> <span class="mi">10</span>
            <span class="n">num</span> <span class="o">=</span> <span class="n">num</span><span class="o">//</span><span class="mi">10</span>
            <span class="n">val</span> <span class="o">+=</span> <span class="n">mapping</span><span class="p">[</span><span class="n">digit</span><span class="p">]</span> <span class="o">*</span> <span class="mi">10</span><span class="o">**</span><span class="n">i</span>
            <span class="n">i</span><span class="o">+=</span><span class="mi">1</span>

        <span class="k">return</span> <span class="n">val</span>

    <span class="k">def</span> <span class="nf">sortJumbled</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mapping</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">],</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]:</span>
        
        <span class="k">return</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">nums</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="bp">self</span><span class="p">.</span><span class="n">convert</span><span class="p">(</span><span class="n">mapping</span><span class="p">,</span> <span class="n">x</span><span class="p">))</span>
</code></pre></div></div>

<h2 id="164-maximum-gap">164. Maximum gap</h2>

<ul>
  <li>
    <p>Vanilla approach - sort then count</p>

    <ul>
      <li>
        <p>however this violates the restriction that you must write an algorithm that runs in <strong>linear time</strong> and uses <strong>linear extra space</strong>.</p>

        <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">maximumGap</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
            <span class="k">return</span> <span class="mi">0</span>
    
        <span class="n">max_gap</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
        <span class="n">sorted_nums</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">nums</span><span class="p">)</span>
    
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">sorted_nums</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
            <span class="n">curr_n</span> <span class="o">=</span> <span class="n">sorted_nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
            <span class="n">next_n</span> <span class="o">=</span> <span class="n">sorted_nums</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span>
    
            <span class="n">max_gap</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">next_n</span><span class="o">-</span><span class="n">curr_n</span><span class="p">,</span> <span class="n">max_gap</span><span class="p">)</span>
            
        <span class="k">return</span> <span class="n">max_gap</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>
    <p>Hence we can consider bucket sort - where we compare the gap between adjacent buckets</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">maximumGap</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="n">low</span><span class="p">,</span> <span class="n">high</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">nums</span><span class="p">),</span> <span class="nb">max</span><span class="p">(</span><span class="n">nums</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)</span>
  
        <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">2</span> <span class="ow">or</span> <span class="n">high</span> <span class="o">==</span> <span class="n">low</span><span class="p">:</span> <span class="k">return</span> <span class="n">high</span> <span class="o">-</span> <span class="n">low</span>
  
        <span class="n">buckets</span> <span class="o">=</span> <span class="n">defaultdict</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
  
        <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">nums</span><span class="p">:</span>
            <span class="n">bucket_index</span> <span class="o">=</span> <span class="n">n</span><span class="o">-</span><span class="mi">2</span> <span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="n">high</span> <span class="k">else</span> <span class="p">((</span><span class="n">num</span> <span class="o">-</span> <span class="n">low</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">//</span><span class="p">(</span><span class="n">high</span><span class="o">-</span><span class="n">low</span><span class="p">)</span> <span class="c1"># the index of the bucket
</span>            <span class="n">buckets</span><span class="p">[</span><span class="n">bucket_index</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
  
          
        <span class="n">candidates</span> <span class="o">=</span> <span class="p">[[</span><span class="nb">min</span><span class="p">(</span><span class="n">buckets</span><span class="p">[</span><span class="n">i</span><span class="p">]),</span> <span class="nb">max</span><span class="p">(</span><span class="n">buckets</span><span class="p">[</span><span class="n">i</span><span class="p">])]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">if</span> <span class="n">buckets</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span>
  
        <span class="n">max_gap</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
        <span class="c1">#for k in buckets.keys():
</span>            <span class="c1">#print(k, buckets[k])
</span>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">candidates</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
            <span class="c1"># min: next bucket #max: curr bucket
</span>            <span class="n">max_gap</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">max_gap</span><span class="p">,</span> <span class="n">candidates</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">candidates</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span>
          
        <span class="k">return</span> <span class="n">max_gap</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="1334-find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance">1334. Find the city with the smallest number of neighbors at a threshold distance</h2>

<ul>
  <li>
    <p>BFS won’t suffice for this question! – it can only visit a node once but there will be circumstance that two paths using the same node.</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">findTheCity</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">n</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">edges</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">]],</span> <span class="n">distanceThreshold</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="c1"># solution - BFS with threshold cut
</span>          
      
        <span class="n">graph</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">candidates</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="c1"># notes: init the graph map first, in case there may have city with no neighbour -- wont be added to keys when building the graph
</span>        <span class="k">for</span> <span class="n">city_no</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
            <span class="n">graph</span><span class="p">[</span><span class="n">city_no</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">candidates</span><span class="p">.</span><span class="n">append</span><span class="p">([</span><span class="n">city_no</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span>
  
        <span class="k">for</span> <span class="n">edge</span> <span class="ow">in</span> <span class="n">edges</span><span class="p">:</span>
            <span class="n">node_0</span> <span class="o">=</span> <span class="n">edge</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
            <span class="n">node_1</span> <span class="o">=</span> <span class="n">edge</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
            <span class="n">distance</span> <span class="o">=</span> <span class="n">edge</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
              
            <span class="k">if</span> <span class="n">node_0</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">:</span>
                <span class="n">graph</span><span class="p">[</span><span class="n">node_0</span><span class="p">].</span><span class="n">append</span><span class="p">([</span><span class="n">node_1</span><span class="p">,</span> <span class="n">distance</span><span class="p">])</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">graph</span><span class="p">[</span><span class="n">node_0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="n">node_1</span><span class="p">,</span> <span class="n">distance</span><span class="p">]]</span>
  
            <span class="k">if</span> <span class="n">node_1</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">:</span>
                <span class="n">graph</span><span class="p">[</span><span class="n">node_1</span><span class="p">].</span><span class="n">append</span><span class="p">([</span><span class="n">node_0</span><span class="p">,</span> <span class="n">distance</span><span class="p">])</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">graph</span><span class="p">[</span><span class="n">node_1</span><span class="p">]</span> <span class="o">=</span> <span class="p">[[</span><span class="n">node_0</span><span class="p">,</span> <span class="n">distance</span><span class="p">]]</span>
              
        <span class="k">print</span><span class="p">(</span><span class="n">graph</span><span class="p">)</span>
  
        <span class="k">for</span> <span class="n">node</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">:</span>
            <span class="n">queue</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">visited</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>
              
            <span class="n">queue</span><span class="p">.</span><span class="n">append</span><span class="p">([</span><span class="n">node</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span>
                        <span class="c1"># node, accumulated distance, city_visited
</span>  
            <span class="n">most_city_visited</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
              
            <span class="k">while</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">queue</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">):</span>
                <span class="n">curr</span> <span class="o">=</span> <span class="n">queue</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
                <span class="n">city</span> <span class="o">=</span> <span class="n">curr</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
                <span class="k">if</span> <span class="n">city</span> <span class="ow">in</span> <span class="n">visited</span><span class="p">:</span>
                    <span class="k">continue</span>
                  
                <span class="n">acc_dist</span> <span class="o">=</span> <span class="n">curr</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
                  
                <span class="k">if</span> <span class="n">acc_dist</span> <span class="o">&gt;</span> <span class="n">distanceThreshold</span><span class="p">:</span>
                    <span class="k">continue</span>
  
                <span class="n">visited</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
                <span class="n">most_city_visited</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="n">city_visited</span> <span class="o">=</span> <span class="n">curr</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
  
                <span class="k">print</span><span class="p">(</span><span class="s">"startcity"</span><span class="p">,</span> <span class="n">node</span><span class="p">,</span> <span class="s">"visiting"</span><span class="p">,</span> <span class="n">city</span><span class="p">,</span> <span class="s">"city_visited"</span><span class="p">,</span> <span class="n">most_city_visited</span><span class="p">,</span> <span class="s">'acc_dist'</span><span class="p">,</span> <span class="n">acc_dist</span><span class="p">)</span>
                  
                <span class="k">for</span> <span class="n">edge</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">[</span><span class="n">city</span><span class="p">]:</span>
                    <span class="n">neighbour</span> <span class="o">=</span> <span class="n">edge</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
                    <span class="n">distance</span> <span class="o">=</span> <span class="n">edge</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">acc_dist</span>
                    <span class="k">if</span> <span class="n">neighbour</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">visited</span><span class="p">:</span>
                        <span class="n">queue</span><span class="p">.</span><span class="n">append</span><span class="p">([</span><span class="n">neighbour</span><span class="p">,</span> <span class="n">distance</span><span class="p">,</span> <span class="n">city_visited</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span>
              
            <span class="n">candidates</span><span class="p">[</span><span class="n">node</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">node</span><span class="p">,</span> <span class="n">most_city_visited</span><span class="p">]</span>
          
          
                                                                  <span class="c1">#dsc city_visited #asc city_no
</span>        <span class="n">sorted_by_name</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="n">candidates</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">pair</span><span class="p">:</span> <span class="p">[</span><span class="n">pair</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="o">-</span><span class="n">pair</span><span class="p">[</span><span class="mi">0</span><span class="p">]]))</span>
        <span class="k">print</span><span class="p">(</span><span class="n">sorted_by_name</span><span class="p">)</span>
  
        <span class="k">return</span> <span class="n">sorted_by_name</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
  
          
</code></pre></div>    </div>
  </li>
  <li>
    <p>The best solution should be using the Floyd-Warshall algorithm</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div>    </div>
  </li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[1701. Average waiting time]]></summary></entry><entry><title type="html">Passed AZ-104 (Azure Administrator Associate) Today</title><link href="http://yourdomain.com/2024/07/06/az104-exam.html" rel="alternate" type="text/html" title="Passed AZ-104 (Azure Administrator Associate) Today" /><published>2024-07-06T00:00:00+00:00</published><updated>2024-07-06T00:00:00+00:00</updated><id>http://yourdomain.com/2024/07/06/az104-exam</id><content type="html" xml:base="http://yourdomain.com/2024/07/06/az104-exam.html"><![CDATA[<p>Prepared the exam for nearly 2 months with intermittent learning and practice. The difficulty is moderate for me and the good thing is that we are able to browse MS learn during the exam. It helped me a lot to double-check details like configuration steps, role permissions which quite relieved me, since I thought it is not an open-book exam. Guidelines can be found here:
<a href="https://learn.microsoft.com/en-us/credentials/support/exam-duration-exam-experience#accessing-microsoft-learn-during-your-certification-exam">Accessing Microsoft Learn during your certification exam</a></p>

<p>Another thing is that I chose the OnVUE online exam, and the experience was not satisfactory. Although I am the first in queue when I started the exam and the exam went well, the exam window went frozen when I was about to submit. The proctor restarted my session (luckily I was able to chat with them… Only the exam window froze, not the pop-up toolbar) but I wasn’t able to click on any until I had restarted my laptop (M1 MacBook) and redo all check-in process to submit my exam. Luckily again, the data wasn’t lost. I think I will take the exam at a local test centre next time.
:(</p>

<p>Happy weekend! Will pursue AZ-500 in the next few weeks.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Prepared the exam for nearly 2 months with intermittent learning and practice. The difficulty is moderate for me and the good thing is that we are able to browse MS learn during the exam. It helped me a lot to double-check details like configuration steps, role permissions which quite relieved me, since I thought it is not an open-book exam. Guidelines can be found here: Accessing Microsoft Learn during your certification exam]]></summary></entry><entry><title type="html">Azure Notes</title><link href="http://yourdomain.com/2024/06/02/azure-notes.html" rel="alternate" type="text/html" title="Azure Notes" /><published>2024-06-02T00:00:00+00:00</published><updated>2024-06-02T00:00:00+00:00</updated><id>http://yourdomain.com/2024/06/02/azure-notes</id><content type="html" xml:base="http://yourdomain.com/2024/06/02/azure-notes.html"><![CDATA[<h2 id="availability-set">Availability set</h2>

<h3 id="fault-domain">Fault Domain</h3>

<ul>
  <li><strong>Definition</strong>: A fault domain is essentially a group of VMs that share a common power source and network switch. By default, Azure distributes VMs in an availability set across up to three fault domains.</li>
  <li><strong>Purpose</strong>: Fault domains are designed to protect against hardware failures, such as issues with the physical server, rack, or data center. If one fault domain fails, the VMs in the other fault domains remain unaffected.</li>
  <li><strong>Example</strong>: If you have three VMs in an availability set, they might be placed in three different fault domains, ensuring that a failure in one domain (e.g., a network switch failure) does not affect the VMs in the other domains.</li>
</ul>

<h3 id="update-domain">Update Domain</h3>

<ul>
  <li><strong>Definition</strong>: An update domain is a group of VMs that can be updated or rebooted at the same time. By default, Azure distributes VMs in an availability set across up to five update domains.</li>
  <li><strong>Purpose</strong>: Update domains are used to manage the application of updates (e.g., patches or software updates) without causing downtime for all VMs in an availability set. Updates are applied one update domain at a time, ensuring that the VMs in other update domains remain available during the process.</li>
  <li><strong>Example</strong>: If you have five VMs in an availability set, they might be placed in five different update domains. During maintenance, Azure will update VMs in one update domain at a time, so only one-fifth of your VMs might be rebooted at any given time.</li>
</ul>

<h3 id="key-differences">Key Differences</h3>

<ul>
  <li><strong>Scope of Protection</strong>:
    <ul>
      <li>Fault Domain: Protects against hardware failures.</li>
      <li>Update Domain: Protects against simultaneous reboots during maintenance or updates.</li>
    </ul>
  </li>
  <li><strong>Number</strong>:
    <ul>
      <li>Fault Domain: Typically up to 3 fault domains.</li>
      <li>Update Domain: Typically up to 5 update domains.</li>
    </ul>
  </li>
  <li><strong>Function</strong>:
    <ul>
      <li>Fault Domain: Ensures VMs are spread across different physical hardware to mitigate hardware failure risk.</li>
      <li>Update Domain: Ensures VMs are updated or rebooted in phases to maintain service availability during maintenance.</li>
    </ul>
  </li>
</ul>

<h2 id="management-group">Management group</h2>

<p>In Microsoft Azure, a subscription can indeed be a member of only one management group at a time. Management groups in Azure are used to manage access, policy, and compliance across multiple Azure subscriptions. Each subscription must be associated with a single management group, but management groups can be nested to provide a hierarchical structure for management.</p>

<h2 id="sas">SAS</h2>

<p>Shared Access Signatures (SAS) in Microsoft Azure provide secure delegated access to resources in your storage account. A SAS token can be used to grant limited access to storage resources without exposing your account key. SAS tokens are supported by various Azure storage services, allowing you to fine-tune permissions and duration of access.</p>

<p>Supported services: <strong>Blob, Queue, Table, File</strong>.</p>

<h3 id="services-supported-by-sas-keys">Services Supported by SAS Keys</h3>

<ol>
  <li><strong>Azure Blob Storage:</strong>
    <ul>
      <li>Containers</li>
      <li>Blobs</li>
      <li>Blob snapshots</li>
      <li>Supports operations like reading, writing, deleting, listing, and setting metadata on blobs and containers.</li>
    </ul>
  </li>
  <li><strong>Azure Queue Storage:</strong>
    <ul>
      <li>Queues</li>
      <li>Messages</li>
      <li>Supports operations like adding, updating, reading, and deleting messages.</li>
    </ul>
  </li>
  <li><strong>Azure Table Storage:</strong>
    <ul>
      <li>Tables</li>
      <li>Entities</li>
      <li>Supports operations like querying, inserting, updating, and deleting table entities.</li>
    </ul>
  </li>
  <li><strong>Azure File Storage:</strong>
    <ul>
      <li>File shares</li>
      <li>Directories</li>
      <li>Files</li>
      <li>Supports operations like reading, writing, deleting files, and managing file shares and directories.</li>
    </ul>
  </li>
</ol>

<h3 id="types-of-sas-tokens">Types of SAS Tokens</h3>

<ol>
  <li><strong>Service SAS:</strong>
    <ul>
      <li>Grants access to resources in a specific service (Blob, Queue, Table, File).</li>
      <li>You can specify permissions, resource types, start and expiry times, and IP address range.</li>
    </ul>
  </li>
  <li><strong>Account SAS:</strong>
    <ul>
      <li>Grants access to resources in any service within the storage account.</li>
      <li>Provides more granular control, including access to service-level operations like listing the blobs in the account.</li>
      <li>Permissions include service operations, service-level actions, and the ability to use specific protocols.</li>
    </ul>
  </li>
  <li><strong>User Delegation SAS:</strong>
    <ul>
      <li>Available for Azure Blob Storage.</li>
      <li>Uses Azure Active Directory (Azure AD) credentials to secure the SAS.</li>
      <li>Allows generating SAS tokens with permissions defined by the user’s Azure AD roles.</li>
    </ul>
  </li>
</ol>

<h3 id="permissions-in-sas-tokens">Permissions in SAS Tokens</h3>

<ul>
  <li><strong>Read (r):</strong> Permits reading resources.</li>
  <li><strong>Write (w):</strong> Permits writing or creating new resources.</li>
  <li><strong>Delete (d):</strong> Permits deleting resources.</li>
  <li><strong>List (l):</strong> Permits listing resources.</li>
  <li><strong>Add (a):</strong> Permits adding messages (Queue Storage) or new resources.</li>
  <li><strong>Create (c):</strong> Permits creating new resources.</li>
  <li><strong>Update (u):</strong> Permits updating resources.</li>
  <li><strong>Process (p):</strong> Permits processing messages (Queue Storage).</li>
</ul>

<h3 id="example-use-cases">Example Use Cases</h3>

<ul>
  <li><strong>Blob Storage:</strong> Generate a SAS token to allow a client to upload images to a blob container without granting full access to the storage account.</li>
  <li><strong>File Storage:</strong> Create a SAS token to enable temporary access to a file share for a user to download files.</li>
  <li><strong>Queue Storage:</strong> Provide limited access to a queue for an application to add messages without exposing the queue’s full access key.</li>
  <li><strong>Table Storage:</strong> Grant access to a table for querying specific entities without exposing the entire storage account key.</li>
</ul>

<h3 id="using-an-azure-file-share-with-windows">Using an Azure file share with Windows</h3>

<p>To use an Azure file share with Windows, you must either mount it, which means assigning it a drive letter or mount point path, or <a href="https://learn.microsoft.com/en-us/azure/storage/files/storage-how-to-use-files-windows#access-an-azure-file-share-via-its-unc-path">access it via its UNC path</a>.</p>

<p>This article uses the storage account key to access the file share. A storage account key is an administrator key for a storage account, including administrator permissions to all files and folders within the file share you’re accessing, and for all file shares and other storage resources (blobs, queues, tables, etc.) contained within your storage account. If this isn’t sufficient for your workload, you can use <a href="https://learn.microsoft.com/en-us/azure/storage/file-sync/file-sync-planning">Azure File Sync</a> or <a href="https://learn.microsoft.com/en-us/azure/storage/files/storage-files-active-directory-overview">identity-based authentication over SMB</a>. <strong>Shared access signature (SAS) tokens aren’t currently supported for mounting Azure file shares.</strong></p>

<h3 id="conclusion">Conclusion</h3>

<p>SAS tokens provide a secure and flexible way to grant limited access to various Azure storage services. By leveraging SAS tokens, you can control access to your storage resources precisely, ensuring that users and applications have the permissions they need without exposing sensitive account keys.</p>

<h2 id="authorization-methods-for-azcopy">Authorization methods for <code class="language-plaintext highlighter-rouge">AzCopy</code></h2>

<ul>
  <li>MS Entra ID (AzureAD)</li>
  <li>SAS token</li>
</ul>

<h2 id="vm-scale-set">VM scale set</h2>

<p>Virtual Machine Scale Sets support both Linux and Windows VMs in Azure and can run up to <strong>1,000 VM</strong>s on a single scale set.</p>

<p>The criteria used to activate the upscale or downscale can depend on a customized schedule or actual demand and usage. Scale sets can apply the same configuration to a group of VMs simultaneously. They don’t require you to manually configure instances individually if you don’t want to.</p>

<p>Before you begin the upgrade process, the orchestrator will ensure that no more than 20% of instances in the entire scale set are unhealthy (for any reason), and for 1 instance at minimum (leq 5 instances).</p>

<h2 id="os-image-upgrade-versus-reimage">OS image upgrade versus reimage</h2>

<p>Both <strong>OS Image Upgrade</strong> and <strong><a href="https://learn.microsoft.com/en-us/rest/api/compute/virtual-machine-scale-sets/reimage">Reimage</a></strong> are methods used to update VMs within a scale set, but they serve different purposes and have distinct impacts.</p>

<p>OS image upgrade involves updating the underlying operating system image that is used to create new instances in a scale set. When you perform an OS image upgrade, Azure will create new VM instances with the updated OS image and gradually replace the old VM instances in the scale set with the new ones. This process is typically performed in stages to ensure high availability. OS image upgrades are a non-disruptive way to apply updates or changes to the underlying OS of the VMs in a scale set. Existing VM instances are not affected until they are replaced with the new instances.</p>

<p>Reimaging a VM instance in a scale set is a more immediate and disruptive action. When you choose to reimage a VM instance, Azure will stop the selected VM instance, perform the reimage operation, and then restart the VM using the same OS image. This effectively reinstalls the OS on that specific VM instance. Reimaging is typically used when you need to troubleshoot or reset a specific VM instance due to issues with that instance.</p>

<h2 id="general-roles">General roles</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Built-in role</th>
      <th style="text-align: left">Description</th>
      <th style="text-align: left">ID</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#contributor">Contributor</a></td>
      <td style="text-align: left">Grants full access to manage all resources, but does not allow you to assign roles in Azure RBAC, manage assignments in Azure Blueprints, or share image galleries.</td>
      <td style="text-align: left">b24988ac-6180-42a0-ab88-20f7382dd24c</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#owner">Owner</a></td>
      <td style="text-align: left">Grants full access to manage all resources, including the ability to assign roles in Azure RBAC.</td>
      <td style="text-align: left">8e3af657-a8ff-443c-a75c-2fe8c4bcb635</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#reader">Reader</a></td>
      <td style="text-align: left">View all resources, but does not allow you to make any changes.</td>
      <td style="text-align: left">acdd72a7-3385-48ef-bd42-f606fba81ae7</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#role-based-access-control-administrator">Role Based Access Control Administrator</a></td>
      <td style="text-align: left">Manage access to Azure resources by assigning roles using Azure RBAC. This role does not allow you to manage access using other ways, such as Azure Policy.</td>
      <td style="text-align: left">f58310d9-a9f6-439a-9e8d-f62e7b41a168</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#user-access-administrator">User Access Administrator</a></td>
      <td style="text-align: left">Lets you manage user access to Azure resources.</td>
      <td style="text-align: left">18d7d88d-d35e-4fb5-a5c3-7773c20a72d9</td>
    </tr>
  </tbody>
</table>

<h2 id="vm-size-naming-convention">VM size naming convention</h2>

<ol>
  <li><strong>General purpose</strong>:
    <ul>
      <li>Prefix: D, A, B</li>
      <li>Suffix: s (standard), v (version), p (premium), l (low priority), d (disk), a (availability)</li>
      <li>Examples: B, Dsv3, Dv3, Dasv4, Dav4, DSv2, Dv2, Av2, Dpdsv5, Dpldsv5, Dpsv5, Dplsv5, Dv4, Dsv4, Ddv4, Ddsv4, Dv5, Dsv5, Ddv5, Ddsv5, Dasv5, Dadsv5, DCasv5, DCadsv5, DCesv5, DCedsv5</li>
    </ul>
  </li>
  <li><strong>Compute optimized</strong>:
    <ul>
      <li>Prefix: F</li>
      <li>Suffix: s (standard), v (version), X (special)</li>
      <li>Examples: F, Fs, Fsv2, FX</li>
    </ul>
  </li>
  <li><strong>Memory optimized</strong>:
    <ul>
      <li>Prefix: E, M, D (some overlap with general purpose)</li>
      <li>Suffix: s (standard), v (version), p (premium), d (disk), a (availability), C (confidential)</li>
      <li>Examples: Esv3, Ev3, Easv4, Eav4, Epdsv5, Epsv5, Ev4, Esv4, Edv4, Edsv4, Ev5, Esv5, Edv5, Edsv5, Easv5, Eadsv5, Mv2, M, DSv2, Dv2, ECasv5, ECadsv5, ECesv5, ECedsv5</li>
    </ul>
  </li>
  <li><strong>Storage optimized</strong>:
    <ul>
      <li>Prefix: L</li>
      <li>Suffix: s (standard), v (version), a (availability)</li>
      <li>Examples: Lsv2, Lsv3, Lasv3</li>
    </ul>
  </li>
  <li><strong>GPU</strong>:
    <ul>
      <li>Prefix: N</li>
      <li>Suffix: v (version), A (specific GPU type), T (Tesla), r (remote), X (special), s (standard), m (multi-instance)</li>
      <li>Examples: NC, NCv2, NCv3, NCasT4_v3, NCA100v4, ND, NDv2, NGadsV620, NV, NVv3, NVv4, NDasrA100_v4, NDm_A100_v4</li>
    </ul>
  </li>
  <li><strong>High performance compute</strong>:
    <ul>
      <li>Prefix: H</li>
      <li>Suffix: B (batch), C (compute), X (special), v (version)</li>
      <li>Examples: HB, HBv2, HBv3, HBv4, HC, HX</li>
    </ul>
  </li>
</ol>

<h2 id="vpn-gateways">VPN gateways</h2>

<p>https://learn.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-howto-vnet-vnet-resource-manager-portal</p>

<h2 id="vm-scale-set-az-vmss">VM scale set <code class="language-plaintext highlighter-rouge">az vmss</code></h2>

<p><code class="language-plaintext highlighter-rouge">az vmss scale</code> - change the number of VMs within a VMSS.</p>

<h2 id="port-numbers-for-common-protocols">Port numbers for common protocols</h2>

<table>
  <thead>
    <tr>
      <th><strong>Protocol</strong></th>
      <th><strong>Port Number</strong></th>
      <th><strong>Description</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>HTTP</strong></td>
      <td>80</td>
      <td>Hypertext Transfer Protocol for web traffic.</td>
    </tr>
    <tr>
      <td><strong>HTTPS</strong></td>
      <td>443</td>
      <td>Secure Hypertext Transfer Protocol for encrypted web traffic.</td>
    </tr>
    <tr>
      <td><strong>FTP</strong></td>
      <td>21</td>
      <td>File Transfer Protocol for transferring files.</td>
    </tr>
    <tr>
      <td><strong>FTPS</strong></td>
      <td>990</td>
      <td>Secure File Transfer Protocol over SSL/TLS.</td>
    </tr>
    <tr>
      <td><strong>SFTP</strong></td>
      <td>22</td>
      <td>Secure File Transfer Protocol over SSH.</td>
    </tr>
    <tr>
      <td><strong>SSH</strong></td>
      <td>22</td>
      <td>Secure Shell for secure remote login and command execution.</td>
    </tr>
    <tr>
      <td><strong>Telnet</strong></td>
      <td>23</td>
      <td>Telnet protocol for unencrypted remote login (not recommended).</td>
    </tr>
    <tr>
      <td><strong>SMTP</strong></td>
      <td>25</td>
      <td>Simple Mail Transfer Protocol for sending emails.</td>
    </tr>
    <tr>
      <td><strong>SMTPS</strong></td>
      <td>465</td>
      <td>Secure SMTP over SSL.</td>
    </tr>
    <tr>
      <td><strong>IMAP</strong></td>
      <td>143</td>
      <td>Internet Message Access Protocol for retrieving emails.</td>
    </tr>
    <tr>
      <td><strong>IMAPS</strong></td>
      <td>993</td>
      <td>Secure IMAP over SSL.</td>
    </tr>
    <tr>
      <td><strong>POP3</strong></td>
      <td>110</td>
      <td>Post Office Protocol version 3 for retrieving emails.</td>
    </tr>
    <tr>
      <td><strong>POP3S</strong></td>
      <td>995</td>
      <td>Secure POP3 over SSL.</td>
    </tr>
    <tr>
      <td><strong>RDP</strong></td>
      <td>3389</td>
      <td>Remote Desktop Protocol for remote desktop access.</td>
    </tr>
    <tr>
      <td><strong>DNS</strong></td>
      <td>53</td>
      <td>Domain Name System for resolving domain names.</td>
    </tr>
    <tr>
      <td><strong>MySQL</strong></td>
      <td>3306</td>
      <td>MySQL database service.</td>
    </tr>
    <tr>
      <td><strong>PostgreSQL</strong></td>
      <td>5432</td>
      <td>PostgreSQL database service.</td>
    </tr>
    <tr>
      <td><strong>SQL Server</strong></td>
      <td>1433</td>
      <td>Microsoft SQL Server database service.</td>
    </tr>
    <tr>
      <td><strong>Oracle DB</strong></td>
      <td>1521</td>
      <td>Oracle database service.</td>
    </tr>
    <tr>
      <td><strong>MongoDB</strong></td>
      <td>27017</td>
      <td>MongoDB database service.</td>
    </tr>
    <tr>
      <td><strong>Redis</strong></td>
      <td>6379</td>
      <td>Redis in-memory data structure store.</td>
    </tr>
    <tr>
      <td><strong>Memcached</strong></td>
      <td>11211</td>
      <td>Memcached caching service.</td>
    </tr>
    <tr>
      <td><strong>NTP</strong></td>
      <td>123</td>
      <td>Network Time Protocol for clock synchronization.</td>
    </tr>
    <tr>
      <td><strong>LDAP</strong></td>
      <td>389</td>
      <td>Lightweight Directory Access Protocol.</td>
    </tr>
    <tr>
      <td><strong>LDAPS</strong></td>
      <td>636</td>
      <td>Secure LDAP over SSL.</td>
    </tr>
    <tr>
      <td><strong>Kerberos</strong></td>
      <td>88</td>
      <td>Kerberos authentication protocol.</td>
    </tr>
    <tr>
      <td><strong>NetBIOS</strong></td>
      <td>137, 138, 139</td>
      <td>NetBIOS over TCP/IP for network services.</td>
    </tr>
    <tr>
      <td><strong>SMB/CIFS</strong></td>
      <td>445</td>
      <td>Server Message Block/Common Internet File System for file sharing.</td>
    </tr>
    <tr>
      <td><strong>VPN (PPTP)</strong></td>
      <td>1723</td>
      <td>Point-to-Point Tunneling Protocol for VPN.</td>
    </tr>
    <tr>
      <td><strong>IKEv2</strong></td>
      <td>500</td>
      <td>Internet Key Exchange for VPN.</td>
    </tr>
    <tr>
      <td><strong>L2TP</strong></td>
      <td>1701</td>
      <td>Layer 2 Tunneling Protocol for VPN.</td>
    </tr>
    <tr>
      <td><strong>ESP</strong></td>
      <td>50</td>
      <td>Encapsulating Security Payload for VPN.</td>
    </tr>
    <tr>
      <td><strong>GRE</strong></td>
      <td>47</td>
      <td>Generic Routing Encapsulation for VPN.</td>
    </tr>
  </tbody>
</table>

<h2 id="tutorial-create-a-site-to-site-vpn-connection">Tutorial: Create a site-to-site VPN connection</h2>

<h3 id="vnet-preparation">VNet preparation</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Address</th>
      <th>Note</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>TestRG1</td>
      <td>Resource Group</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>VNet1</td>
      <td>Virtual Network</td>
      <td>10.1.0.0/16</td>
      <td>Central Canada</td>
    </tr>
    <tr>
      <td>FrontEnd</td>
      <td>Subnet</td>
      <td>10.1.0.0/24</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606161716240.png" alt="image-20240606161716240" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606162220148.png" alt="image-20240606162220148" /></p>

<h3 id="create-a-gateway-subnet">Create a gateway subnet</h3>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606162615577.png" alt="image-20240606162615577" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606162600108.png" alt="image-20240606162600108" /></p>

<h3 id="create-a-vpn-gateway">Create a VPN gateway</h3>

<ol>
  <li>
    <p>In search bar, search “Virtual network gateways”</p>
  </li>
  <li>
    <p>Create a virtual network gateway with the following configs:</p>

    <p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606163210724.png" alt="image-20240606163210724" /></p>
  </li>
</ol>

<h2 id="vm-backup">VM backup</h2>

<p>https://learn.microsoft.com/en-us/azure/backup/backup-azure-vms-first-look-arm</p>

<h2 id="sspr">SSPR</h2>

<p>SSPR is a centralized self-service password reset portal for accounts under Azure tenants.</p>

<p>Requirements:</p>

<ul>
  <li>P1 license and up</li>
  <li>Users with admin roles have more strict reset policies.
    <ul>
      <li>a strong default <em>two-gate</em> policy is enforced.
        <ul>
          <li>requires two pieces of authentication data:
            <ul>
              <li>Email address</li>
              <li>authenticator app</li>
              <li>phone number</li>
            </ul>
          </li>
          <li>security questions are prohibited</li>
        </ul>
      </li>
      <li>cmdlet <code class="language-plaintext highlighter-rouge">Update-MgPolicyAuthorizationPolicy</code> can be used to enable/disable SSPR for admin users with parameter <code class="language-plaintext highlighter-rouge">-AllowedToUseSspr</code></li>
    </ul>
  </li>
</ul>

<h2 id="dns-verification-process">DNS verification process</h2>

<p>The purpose of DNS verification using a TXT or MX record (containing a random token) is to confirm that the entity requesting the service owns the target domain. After verification, Azure provides the detailed configuration information to the verified domain owner.</p>

<p>To use custom domains, first we need to register this domain at a registrar, then, configure the name server to one of the Azure NSs. Then, we can use Azure to manage the domain (including connecting to vnets and more).</p>

<h3 id="dns-resolution-process">DNS Resolution Process</h3>

<ol>
  <li><strong>Local DNS Resolver</strong>:
    <ul>
      <li>When a user enters a domain name (e.g., <code class="language-plaintext highlighter-rouge">example.com</code>) in their browser, the request first goes to the user’s local DNS resolver, which is usually managed by their ISP or configured on their network.</li>
    </ul>
  </li>
  <li><strong>Check Local Cache</strong>:
    <ul>
      <li>The local DNS resolver checks its cache to see if it already has a recent response for the domain name. If it does, it returns the cached result, skipping further steps.</li>
    </ul>
  </li>
  <li><strong>Query the Root DNS Servers</strong>:
    <ul>
      <li>If the local DNS resolver does not have the cached result, it queries one of the root DNS servers. The root DNS servers know the authoritative servers for all top-level domains (TLDs, like <code class="language-plaintext highlighter-rouge">.com</code>, <code class="language-plaintext highlighter-rouge">.net</code>, etc.).</li>
    </ul>
  </li>
  <li><strong>TLD DNS Servers</strong>:
    <ul>
      <li>The root DNS server responds with the address of the TLD DNS server responsible for <code class="language-plaintext highlighter-rouge">.com</code> domains.</li>
      <li>The local DNS resolver then queries the TLD DNS server for <code class="language-plaintext highlighter-rouge">example.com</code>.</li>
    </ul>
  </li>
  <li><strong>Authoritative DNS Servers (Azure DNS)</strong>:
    <ul>
      <li>The TLD DNS server responds with the address of the authoritative DNS servers for <code class="language-plaintext highlighter-rouge">example.com</code>, which are the Azure DNS servers you configured.</li>
      <li>The local DNS resolver queries one of the Azure DNS servers for <code class="language-plaintext highlighter-rouge">example.com</code>.</li>
    </ul>
  </li>
  <li><strong>Retrieve DNS Records</strong>:
    <ul>
      <li>The Azure DNS server responds with the DNS records for <code class="language-plaintext highlighter-rouge">example.com</code> (e.g., the IP address associated with the domain).</li>
    </ul>
  </li>
  <li><strong>Return Response to Client</strong>:
    <ul>
      <li>The local DNS resolver caches the response and returns the result to the user’s machine.</li>
      <li>The browser can now connect to the IP address returned and load the website.</li>
    </ul>
  </li>
</ol>

<h3 id="example-walkthrough">Example Walkthrough</h3>

<ol>
  <li><strong>User Input</strong>:
    <ul>
      <li>User enters <code class="language-plaintext highlighter-rouge">www.example.com</code> in their browser.</li>
    </ul>
  </li>
  <li><strong>Local DNS Cache</strong>:
    <ul>
      <li>The local DNS resolver checks if <code class="language-plaintext highlighter-rouge">www.example.com</code> is in its cache.</li>
    </ul>
  </li>
  <li><strong>Root Server Query</strong>:
    <ul>
      <li>If not in cache, the local DNS resolver queries a root DNS server.</li>
    </ul>
  </li>
  <li><strong>TLD Server Query</strong>:
    <ul>
      <li>Root DNS server responds with the TLD DNS server for <code class="language-plaintext highlighter-rouge">.com</code>.</li>
    </ul>
  </li>
  <li><strong>Authoritative DNS Server Query</strong>:
    <ul>
      <li>The local DNS resolver queries the TLD DNS server for <code class="language-plaintext highlighter-rouge">example.com</code>.</li>
      <li>TLD DNS server responds with the Azure DNS servers.</li>
    </ul>
  </li>
  <li><strong>Azure DNS Response</strong>:
    <ul>
      <li>The local DNS resolver queries the Azure DNS server for <code class="language-plaintext highlighter-rouge">www.example.com</code>.</li>
      <li>Azure DNS server responds with the IP address (e.g., <code class="language-plaintext highlighter-rouge">192.0.2.1</code>).</li>
    </ul>
  </li>
  <li><strong>Browser Connects</strong>:
    <ul>
      <li>The local DNS resolver caches the response and returns the IP address to the browser.</li>
      <li>The browser connects to <code class="language-plaintext highlighter-rouge">192.0.2.1</code> and loads the website.</li>
    </ul>
  </li>
</ol>

<h2 id="storage-replication-strategies">Storage replication strategies</h2>

<p>LRS</p>

<p>ZRS</p>

<p>GRS</p>

<p>GZRS</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Node in data center unavailable</th>
      <th style="text-align: left">Entire data center unavailable</th>
      <th style="text-align: left">Region-wide outage</th>
      <th style="text-align: left">Read access during region-wide outage</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">- <strong>LRS</strong> - <strong>ZRS</strong> - <strong>GRS</strong> - <strong>RA-GRS</strong> - <strong>GZRS</strong> - <strong>RA-GZRS</strong></td>
      <td style="text-align: left">- <strong>ZRS</strong> - <strong>GRS</strong> - <strong>RA-GRS</strong> - <strong>GZRS</strong> - <strong>RA-GZRS</strong></td>
      <td style="text-align: left">- <strong>GRS</strong> - <strong>RA-GRS</strong> - <strong>GZRS</strong> - <strong>RA-GZRS</strong></td>
      <td style="text-align: left">- <strong>RA-GRS</strong> - <strong>RA-GZRS</strong></td>
    </tr>
  </tbody>
</table>

<h2 id="sas-features">SAS features</h2>

<ul>
  <li>Signing method</li>
  <li>Signing key
    <ul>
      <li>MS-managed keys</li>
      <li>customer-managed keys</li>
    </ul>
  </li>
  <li>Permissions</li>
  <li>Start and Expiry date/time</li>
  <li>Allowed IP</li>
  <li>Allowed protocols</li>
</ul>

<h3 id="uri-definitions">URI definitions</h3>

<ul>
  <li>Resource URI</li>
  <li><code class="language-plaintext highlighter-rouge">sv</code> - storage version</li>
  <li><code class="language-plaintext highlighter-rouge">ss</code> - storage service</li>
  <li><code class="language-plaintext highlighter-rouge">st</code> - start time</li>
  <li><code class="language-plaintext highlighter-rouge">se</code> - expiry time</li>
  <li><code class="language-plaintext highlighter-rouge">sr</code> - resource</li>
  <li><code class="language-plaintext highlighter-rouge">sp</code> - permissions</li>
  <li><code class="language-plaintext highlighter-rouge">sip</code> - ip range</li>
  <li><code class="language-plaintext highlighter-rouge">spr</code> - protocol</li>
  <li><code class="language-plaintext highlighter-rouge">sig</code> - signature</li>
</ul>

<h2 id="summary-of-supported-authentication-methods-in-azcopy">Summary of supported authentication methods in <code class="language-plaintext highlighter-rouge">azcopy</code></h2>

<table>
  <thead>
    <tr>
      <th>Service</th>
      <th>Supported Authentication Methods</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Azure Blob Storage</strong></td>
      <td>SAS, OAuth</td>
    </tr>
    <tr>
      <td><strong>Azure Files</strong></td>
      <td>Share/Directory SAS</td>
    </tr>
    <tr>
      <td><strong>Azure Data Lake Storage Gen2</strong></td>
      <td>SAS, OAuth, Shared Key</td>
    </tr>
    <tr>
      <td><strong>AWS S3 to Azure Blob</strong></td>
      <td>Access Key (AWS) to SAS, OAuth (Azure Blob)</td>
    </tr>
    <tr>
      <td><strong>Google Cloud Storage to Azure Blob</strong></td>
      <td>Service Account Key (GCS) to SAS, OAuth (Azure Blob)</td>
    </tr>
  </tbody>
</table>

<h2 id="azure-backup-services">Azure backup services</h2>

<h3 id="access-tiers">Access tiers</h3>

<table>
  <thead>
    <tr>
      <th>Feature</th>
      <th>Snapshot Tier</th>
      <th>Vault-Standard Tier</th>
      <th>Archive Tier</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Storage Location</strong></td>
      <td>Customer’s subscription</td>
      <td>Microsoft-managed tenant</td>
      <td>Long-term, low-cost storage</td>
    </tr>
    <tr>
      <td><strong>Restoration Speed</strong></td>
      <td>Fastest</td>
      <td>Moderate</td>
      <td>Slowest</td>
    </tr>
    <tr>
      <td><strong>Availability</strong></td>
      <td>Locally available</td>
      <td>Isolated copy</td>
      <td>For compliance, rarely accessed</td>
    </tr>
    <tr>
      <td><strong>Use Cases</strong></td>
      <td>Quick restores</td>
      <td>Regular backup and restore operations</td>
      <td>Long-term retention for compliance</td>
    </tr>
    <tr>
      <td><strong>RTO</strong></td>
      <td>Low</td>
      <td>Moderate</td>
      <td>High</td>
    </tr>
    <tr>
      <td><strong>Pricing</strong></td>
      <td>Higher storage cost</td>
      <td>Moderate cost</td>
      <td>Lowest cost</td>
    </tr>
  </tbody>
</table>

<h3 id="built-in-security-measures">Built-in security measures</h3>

<ul>
  <li>RBAC</li>
  <li>Encryption</li>
  <li>Soft-delete</li>
</ul>

<h3 id="vm-protections">VM Protections</h3>

<ul>
  <li>
    <p>Azure Backup</p>

    <p>Snapshot of the entire vm. Restore the entire</p>
  </li>
  <li>
    <p>Azure Site Recovery</p>
  </li>
  <li>
    <p>Azure managed disks</p>

    <ul>
      <li>snapshot</li>
      <li>image</li>
    </ul>
  </li>
</ul>

<p>images - the whole vm</p>

<p>snapshots - one disk</p>

<p>operating disk backups - for vm with only one disk</p>

<h3 id="soft-delete">Soft delete</h3>

<p>Steps:</p>

<ul>
  <li>Stop backup job</li>
  <li>Apply soft-delete state</li>
  <li>View soft-delete data in the vault - during the 14 day retention period.</li>
  <li>Undelete backup items</li>
  <li>Restore items</li>
  <li>Resume backups</li>
</ul>

<h2 id="entra-id">Entra ID</h2>

<p>Your company makes use of Multi-Factor Authentication for when users are not in the office. The</p>

<p>Per Authentication option has been configured as the usage model.</p>

<p>After the acquisition of a smaller business and the addition of the new staff to Azure Active</p>

<p>Directory (Azure AD) obtains a different company and adding the new employees to Azure Active</p>

<p>Directory (Azure AD), you are informed that these employees should also make use of Multi-</p>

<p>Factor Authentication.</p>

<p>To achieve this, the Per Enabled User setting must be set for the usage model.</p>

<p>Solution: You reconfigure the existing usage model via the Azure portal.</p>

<p>Does the solution meet the goal?</p>

<p>Your company has an Azure Active Directory (Azure AD) tenant named weyland.com that is</p>

<p>configured for hybrid coexistence with the on-premises Active Directory domain.</p>

<p>You have a server named DirSync1 that is configured as a DirSync server.</p>

<p>You create a new user account in the on-premise Active Directory. You now need to replicate the</p>

<p>user information to Azure AD immediately.</p>

<p>Solution: You run the Start-ADSyncSyncCycle -PolicyType Initial PowerShell cmdlet.</p>

<dl>
  <dt>Does the solution meet the goal?</dt>
  <dd>
    <p><code class="language-plaintext highlighter-rouge">Start-ADSyncSyncCycle -PolicyType Delta</code></p>
  </dd>
</dl>

<h2 id="move-an-app-to-a-different-region">Move an app to a different region</h2>

<p>The region in which your app runs is the region of the App Service plan it’s in. However, you cannot change an App Service plan’s region. If you want to run your app in a different region, one alternative is app cloning. Cloning makes a copy of your app in a new or existing App Service plan in any region.</p>

<p>You can find <strong>Clone App</strong> in the <strong>Development Tools</strong> section of the menu.</p>

<p><strong>Steps:</strong></p>

<ol>
  <li><a href="https://learn.microsoft.com/en-us/azure/app-service/manage-backup">Create a back up of the source app</a>.</li>
  <li><a href="https://learn.microsoft.com/en-us/azure/app-service/app-service-plan-manage#create-an-app-service-plan">Create an app in a new App Service plan, in the target region</a>.</li>
  <li><a href="https://learn.microsoft.com/en-us/azure/app-service/manage-backup">Restore the back up in the target app</a></li>
  <li>If you use a custom domain, <a href="https://learn.microsoft.com/en-us/azure/app-service/manage-custom-dns-migrate-domain#2-create-the-dns-records">bind it preemptively to the target app</a> with <code class="language-plaintext highlighter-rouge">asuid.</code> and <a href="https://learn.microsoft.com/en-us/azure/app-service/manage-custom-dns-migrate-domain#3-enable-the-domain-for-your-app">enable the domain in the target app</a>.</li>
  <li>Configure everything else in your target app to be the same as the source app and verify your configuration.</li>
  <li>When you’re ready for the custom domain to point to the target app, <a href="https://learn.microsoft.com/en-us/azure/app-service/manage-custom-dns-migrate-domain#4-remap-the-active-dns-name">remap the domain name</a>.</li>
</ol>

<h2 id="load-balancer-skus">Load Balancer SKUs</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left"> </th>
      <th style="text-align: left">Standard Load Balancer</th>
      <th>Basic Load Balancer</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Scenario</td>
      <td style="text-align: left">Equipped for load-balancing network layer traffic when high performance and ultra-low latency is needed. Routes traffic within and across regions, and to availability zones for high resiliency.</td>
      <td>Equipped for small-scale applications that don’t need high availability or redundancy. Not compatible with availability zones.</td>
    </tr>
    <tr>
      <td style="text-align: left">Backend type</td>
      <td style="text-align: left">IP based, NIC based</td>
      <td>NIC based</td>
    </tr>
    <tr>
      <td style="text-align: left">Protocol</td>
      <td style="text-align: left">TCP, UDP</td>
      <td>TCP, UDP</td>
    </tr>
    <tr>
      <td style="text-align: left">Backend pool endpoints</td>
      <td style="text-align: left">Any virtual machines or virtual machine scale sets in a single virtual network</td>
      <td>Virtual machines in a single availability set or virtual machine scale set</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-custom-probe-overview#probe-protocol">Health probes</a></td>
      <td style="text-align: left">TCP, HTTP, HTTPS</td>
      <td>TCP, HTTP</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-custom-probe-overview#probe-down-behavior">Health probe down behavior</a></td>
      <td style="text-align: left">TCP connections stay alive on an instance probe down <strong>and</strong> on all probes down.</td>
      <td>TCP connections stay alive on an instance probe down. All TCP connections end when all probes are down.</td>
    </tr>
    <tr>
      <td style="text-align: left">Availability Zones</td>
      <td style="text-align: left">Zone-redundant, zonal, or non-zonal frontend IP configurations can be used for inbound and outbound traffic</td>
      <td>Not available</td>
    </tr>
    <tr>
      <td style="text-align: left">Type</td>
      <td style="text-align: left">Internal, Public</td>
      <td>Internal, Public</td>
    </tr>
    <tr>
      <td style="text-align: left">Frontend IP configuration</td>
      <td style="text-align: left">When using a Public Standard Load Balancer, the SKU of the public IP must be Standard. Basic Public IPs are not supported on Standard LB</td>
      <td>When using a Public Basic Load Balancer, the SKU of the public IP must be Basic. Standard Public IPs are not supported on Basic LB</td>
    </tr>
    <tr>
      <td style="text-align: left">Diagnostics</td>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-standard-diagnostics">Azure Monitor multi-dimensional metrics</a></td>
      <td>Not supported</td>
    </tr>
    <tr>
      <td style="text-align: left">HA Ports</td>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-ha-ports-overview">Available for Internal Load Balancer</a></td>
      <td>Not available</td>
    </tr>
    <tr>
      <td style="text-align: left">Secure by default</td>
      <td style="text-align: left">Closed to inbound flows unless allowed by a network security group. Internal traffic from the virtual network to the internal load balancer is allowed.</td>
      <td>Open by default. Network security group optional.</td>
    </tr>
    <tr>
      <td style="text-align: left">Outbound Rules</td>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-outbound-connections#outboundrules">Declarative outbound NAT configuration</a></td>
      <td>Not available</td>
    </tr>
    <tr>
      <td style="text-align: left">TCP Reset on Idle</td>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-tcp-reset">Available on any rule</a></td>
      <td>Not available</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-multivip-overview">Multiple front ends</a></td>
      <td style="text-align: left">Inbound and <a href="https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-outbound-connections">outbound</a></td>
      <td>Inbound only</td>
    </tr>
    <tr>
      <td style="text-align: left">Management Operations</td>
      <td style="text-align: left">Most operations &lt; 30 seconds</td>
      <td>60-90+ seconds typical</td>
    </tr>
    <tr>
      <td style="text-align: left">SLA</td>
      <td style="text-align: left"><a href="https://azure.microsoft.com/support/legal/sla/load-balancer/v1_0/">99.99%</a></td>
      <td>Not available</td>
    </tr>
    <tr>
      <td style="text-align: left">Global VNet Peering Support</td>
      <td style="text-align: left">Standard Internal Load Balancer is supported via Global VNet Peering</td>
      <td>Not supported</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/virtual-network/nat-gateway/nat-overview">NAT Gateway Support</a></td>
      <td style="text-align: left">Both Standard Internal Load Balancer and Standard Public Load Balancer are supported via Nat Gateway</td>
      <td>Not supported</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/private-link/private-link-overview">Private Link Support</a></td>
      <td style="text-align: left">Standard Internal Load Balancer is supported via Private Link</td>
      <td>Not supported</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/load-balancer/cross-region-overview">Global tier</a></td>
      <td style="text-align: left">Standard Load Balancer supports the Global tier for Public Load Balancers enabling cross-region load balancing</td>
      <td>Not supported</td>
    </tr>
  </tbody>
</table>

<h2 id="azure-governance-tools">Azure governance tools</h2>

<h3 id="a-azure-traffic-analytics">A. Azure Traffic Analytics</h3>

<p>Azure Traffic Analytics is a cloud-based solution that provides visibility into user and application traffic on your Azure virtual network. It leverages Network Security Group (NSG) flow logs to give you insights into traffic patterns and identify potential security threats.</p>

<p><strong>Key Features:</strong></p>

<ul>
  <li><strong>Network Traffic Visibility</strong>: Provides a comprehensive view of the traffic flow in your Azure network.</li>
  <li><strong>Threat Detection</strong>: Helps identify potential security threats and anomalies in network traffic.</li>
  <li><strong>Performance Monitoring</strong>: Monitors network performance and identifies bottlenecks.</li>
  <li><strong>Compliance Reporting</strong>: Assists in compliance reporting by providing detailed traffic logs and analytics.</li>
  <li><strong>Integration</strong>: Integrates with other Azure security services like Azure Security Center.</li>
</ul>

<h3 id="b-azure-monitor">B. Azure Monitor</h3>

<p>Azure Monitor is a full-stack monitoring service that provides a comprehensive solution for collecting, analyzing, and acting on telemetry from your cloud and on-premises environments. It helps you maximize the availability and performance of your applications and services.</p>

<p><strong>Key Features:</strong></p>

<ul>
  <li><strong>Data Collection</strong>: Collects data from various sources, including applications, guest operating systems, Azure resources, and custom sources.</li>
  <li><strong>Metrics and Logs</strong>: Provides powerful metrics and log analytics capabilities.</li>
  <li><strong>Dashboards</strong>: Customizable dashboards to visualize monitoring data.</li>
  <li><strong>Alerts</strong>: Configurable alerts based on specific criteria to notify you of performance issues.</li>
  <li><strong>Insights</strong>: Application Insights for monitoring application performance and dependencies.</li>
  <li><strong>Diagnostics</strong>: Detailed diagnostics to troubleshoot issues.</li>
</ul>

<h3 id="c-azure-activity-log">C. Azure Activity Log</h3>

<p>Azure Activity Log provides a record of all the activities that happen in your Azure subscription. It helps you understand the operations that were performed on resources in your subscription and provides insights into the “what, who, and when” for any write operations (PUT, POST, DELETE) taken on the resources.</p>

<p><strong>Key Features:</strong></p>

<ul>
  <li><strong>Operation Logs</strong>: Logs of all create, update, and delete operations performed on Azure resources.</li>
  <li><strong>User and System Actions</strong>: Tracks actions performed by users and systems.</li>
  <li><strong>Event Insights</strong>: Provides insights into the events that have occurred within your Azure resources.</li>
  <li><strong>Audit and Compliance</strong>: Useful for auditing and compliance purposes by providing detailed logs of resource changes.</li>
  <li><strong>Integration</strong>: Can be integrated with Azure Monitor and other services for deeper analytics and alerts.</li>
</ul>

<h3 id="d-azure-advisor">D. Azure Advisor</h3>

<p>Azure Advisor is a personalized cloud consultant that helps you follow best practices to optimize your Azure deployments. It analyzes your resource configuration and usage telemetry and offers recommendations to help you improve the cost-effectiveness, performance, reliability, and security of your resources.</p>

<p><strong>Key Features:</strong></p>

<ul>
  <li><strong>Cost Recommendations</strong>: Provides suggestions to reduce your overall Azure spending.</li>
  <li><strong>Performance Recommendations</strong>: Offers advice to improve the performance of your applications.</li>
  <li><strong>Security Recommendations</strong>: Identifies potential security vulnerabilities and provides recommendations to mitigate them.</li>
  <li><strong>Reliability Recommendations</strong>: Helps improve the reliability of your applications with best practices.</li>
  <li><strong>Actionable Insights</strong>: Provides actionable insights and recommendations that you can implement directly from the Advisor portal.</li>
  <li><strong>Integration</strong>: Integrates with other Azure services to provide a holistic view of your resource optimization.</li>
</ul>

<p>These tools collectively help you manage, monitor, and optimize your Azure environment effectively.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Availability set]]></summary></entry><entry><title type="html">Azure Storage</title><link href="http://yourdomain.com/2024/05/30/azure-storage.html" rel="alternate" type="text/html" title="Azure Storage" /><published>2024-05-30T00:00:00+00:00</published><updated>2024-05-30T00:00:00+00:00</updated><id>http://yourdomain.com/2024/05/30/azure-storage</id><content type="html" xml:base="http://yourdomain.com/2024/05/30/azure-storage.html"><![CDATA[<h2 id="install-azure-cli">Install Azure CLI</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install azure-cli
</code></pre></div></div>

<h2 id="login-to-azure-in-azure-cli">Login to Azure in Azure CLI</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az login
</code></pre></div></div>

<p>A browser will start and perform the authentication process.</p>

<h2 id="auth-modes">Auth modes</h2>

<table>
  <thead>
    <tr>
      <th><strong>Authentication Mode</strong></th>
      <th><strong>Description</strong></th>
      <th><strong>Pros</strong></th>
      <th><strong>Cons</strong></th>
      <th><strong>Use Cases</strong></th>
      <th><strong>Command Example</strong></th>
      <th><strong>Parameters</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Shared Key Authorization</strong></td>
      <td>Uses the storage account name and account key.</td>
      <td>Easy to use, straightforward for development.</td>
      <td>Security risks if account keys are shared.</td>
      <td>Development, some production scenarios.</td>
      <td><code class="language-plaintext highlighter-rouge">az storage blob upload --account-name myaccount --account-key myaccountkey --container-name mycontainer --name myblob --file myfile</code></td>
      <td><code class="language-plaintext highlighter-rouge">--account-name</code>, <code class="language-plaintext highlighter-rouge">--account-key</code>, <code class="language-plaintext highlighter-rouge">--container-name</code>, <code class="language-plaintext highlighter-rouge">--name</code>, <code class="language-plaintext highlighter-rouge">--file</code></td>
    </tr>
    <tr>
      <td><strong>Shared Access Signature (SAS)</strong></td>
      <td>Provides delegated access with specific permissions and expiration.</td>
      <td>Fine-grained control over permissions and expiration.</td>
      <td>Needs careful management to avoid security risks.</td>
      <td>Temporary access, limited permissions.</td>
      <td><code class="language-plaintext highlighter-rouge">az storage blob upload --sas-token mySASToken --container-name mycontainer --name myblob --file myfile</code></td>
      <td><code class="language-plaintext highlighter-rouge">--sas-token</code>, <code class="language-plaintext highlighter-rouge">--container-name</code>, <code class="language-plaintext highlighter-rouge">--name</code>, <code class="language-plaintext highlighter-rouge">--file</code></td>
    </tr>
    <tr>
      <td><strong>Azure Active Directory (Azure AD)</strong></td>
      <td>Provides role-based access control (RBAC) using Azure AD identities.</td>
      <td>Provides RBAC, integrates with Azure AD.</td>
      <td>More complex setup compared to shared key or SAS.</td>
      <td>Production, enterprise environments.</td>
      <td><code class="language-plaintext highlighter-rouge">az login \n az storage blob upload --account-name myaccount --container-name mycontainer --name myblob --file myfile --auth-mode login</code></td>
      <td><code class="language-plaintext highlighter-rouge">--account-name</code>, <code class="language-plaintext highlighter-rouge">--container-name</code>, <code class="language-plaintext highlighter-rouge">--name</code>, <code class="language-plaintext highlighter-rouge">--file</code>, <code class="language-plaintext highlighter-rouge">--auth-mode</code></td>
    </tr>
    <tr>
      <td><strong>Managed Identities</strong></td>
      <td>Uses automatically managed identity for Azure resources to authenticate.</td>
      <td>Simplifies identity management, no credentials needed.</td>
      <td>Requires services to support managed identities.</td>
      <td>Production, simplifying identity management.</td>
      <td><code class="language-plaintext highlighter-rouge">az login --identity \n az storage blob upload --account-name myaccount --container-name mycontainer --name myblob --file myfile --auth-mode login</code></td>
      <td><code class="language-plaintext highlighter-rouge">--account-name</code>, <code class="language-plaintext highlighter-rouge">--container-name</code>, <code class="language-plaintext highlighter-rouge">--name</code>, <code class="language-plaintext highlighter-rouge">--file</code>, <code class="language-plaintext highlighter-rouge">--auth-mode</code></td>
    </tr>
    <tr>
      <td><strong>OAuth Bearer Token</strong></td>
      <td>Uses OAuth tokens obtained from Azure AD to authenticate.</td>
      <td>Supports OAuth 2.0, flexible token-based authentication.</td>
      <td>Requires handling OAuth token lifecycle.</td>
      <td>Token-based scenarios, custom authentication flows.</td>
      <td><code class="language-plaintext highlighter-rouge">TOKEN=$(az account get-access-token --resource https://storage.azure.com/ --query accessToken --output tsv) \n curl -X PUT -H "Authorization: Bearer $TOKEN" -T myfile "https://myaccount.blob.core.windows.net/mycontainer/myblob"</code></td>
      <td><code class="language-plaintext highlighter-rouge">--resource</code>, <code class="language-plaintext highlighter-rouge">--query</code>, <code class="language-plaintext highlighter-rouge">--output</code> (for <code class="language-plaintext highlighter-rouge">az account get-access-token</code>), <code class="language-plaintext highlighter-rouge">-X PUT</code>, <code class="language-plaintext highlighter-rouge">-H "Authorization: Bearer $TOKEN"</code>, <code class="language-plaintext highlighter-rouge">-T myfile</code> (for <code class="language-plaintext highlighter-rouge">curl</code>)</td>
    </tr>
  </tbody>
</table>

<ul>
  <li><strong>Account Key</strong>:
    <ul>
      <li>Suitable for full administrative control and development purposes.</li>
      <li>Provides access to all resources within the storage account.</li>
      <li>Higher security risk due to the breadth of access granted.</li>
    </ul>
  </li>
  <li><strong>Shared Access Signature (SAS)</strong>:
    <ul>
      <li>Suitable for scenarios requiring delegated, limited access.</li>
      <li>Provides granular control over permissions, resources, and duration.</li>
      <li>Enhances security by restricting access based on permissions, IP, and protocol.</li>
    </ul>
  </li>
</ul>

<h2 id="azure-blobs">Azure blobs</h2>

<blockquote>
  <p>Using account-key authentication methods</p>

  <p>Account keys can be found here:</p>

  <p><img src="/Users/aoi/Desktop/Screenshot 2024-05-30 at 5.09.24 PM.png" alt="Screenshot 2024-05-30 at 5.09.24 PM" /></p>
</blockquote>

<h3 id="create-a-container">Create a container</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az storage container create \
--name $container-name \
--account-name $storage-account \
--account-key $storage-access-key \
</code></pre></div></div>

<p><img src="/Users/aoi/Desktop/Screenshot 2024-05-30 at 5.12.13 PM.png" alt="Screenshot 2024-05-30 at 5.12.13 PM" /></p>

<h3 id="upload-a-file-to-the-container">Upload a file to the container</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az storage blob upload \
--file $file \
--container-name $container-name \
--account-name $storage-account \
--account-key $storage-access-key
</code></pre></div></div>

<p><img src="/Users/aoi/Desktop/Screenshot 2024-05-30 at 5.34.14 PM.png" alt="Screenshot 2024-05-30 at 5.34.14 PM" /></p>

<h3 id="upload-multiple-files-recursively">Upload multiple files recursively</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az storage blob upload-batch \
--destination $container-name \
--source $path \
--pattern *.png \
--account-name $storage-account \
--account-key $storage-access-key
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[Install Azure CLI]]></summary></entry><entry><title type="html">Azure Sas</title><link href="http://yourdomain.com/2024/05/27/Azure-SAS.html" rel="alternate" type="text/html" title="Azure Sas" /><published>2024-05-27T00:00:00+00:00</published><updated>2024-05-27T00:00:00+00:00</updated><id>http://yourdomain.com/2024/05/27/Azure-SAS</id><content type="html" xml:base="http://yourdomain.com/2024/05/27/Azure-SAS.html"><![CDATA[<h2 id="features-of-entra-id">Features of Entra ID</h2>

<h3 id="sso-access">SSO access</h3>

<h3 id="ubiquitous-device-support">Ubiquitous device support</h3>

<h3 id="secure-remote-access">Secure remote access</h3>

<h3 id="cloud-extensibility">Cloud extensibility</h3>

<h3 id="sensitive-data-protection">Sensitive data protection</h3>

<h3 id="self-service-support">Self-service support</h3>

<h2 id="concepts">Concepts</h2>

<h3 id="identity">Identity</h3>

<h3 id="account">Account</h3>

<h3 id="ms-entra-account">MS Entra account</h3>

<h3 id="azure-tenant-directory---a-single-organization">Azure tenant (directory) - a single organization</h3>

<h3 id="azure-subscription">Azure subscription</h3>

<h2 id="create-user-accounts">Create user accounts</h2>

<h3 id="lab-scenario">Lab scenario</h3>

<p>Your organization will be using Microsoft Entra authentication. You’ve been tasked with provisioning the required user and group accounts. Membership of the groups should be updated automatically based on the user job titles. You also need to invite guest users from another tenant. These guest users should have only limited permissions to resources in your subscription.</p>

<p>Your organization has these specific requirements:</p>

<ul>
  <li>Any user with the Cloud Administrator job title should be assigned to the IT Cloud Administrator group.</li>
  <li>Any user with the System Administrator job title should be assigned to the IT System Administrator group.</li>
  <li>Any user that is a member of the IT Cloud Administrator group or the IT System Administrator group should be assigned to the IT Lab Administrator group.</li>
  <li>A System Administrator in another Active Directory tenant should be invited as guest user with limited permissions.</li>
</ul>

<h3 id="architecture-diagram">Architecture diagram</h3>

<p><img src="https://learn.microsoft.com/en-us/training/wwl-azure/configure-user-group-accounts/media/lab-01.png" alt="Architecture diagram as explained in the text." /></p>

<h3 id="objectives">Objectives</h3>

<ul>
  <li>Task 1: Create and configure Microsoft Entra users.
    <ul>
      <li>User <strong>AZ104-01a-aaduser1</strong> will be a Cloud Administrator assigned the User Administrator role.</li>
      <li>User <strong>AZ104-01a-aaduser2</strong> will be a System Administrator.</li>
    </ul>
  </li>
  <li>Task 2: Create AD groups with assigned and dynamic membership.
    <ul>
      <li>The <strong>IT Cloud Administrator</strong> group should include any user with the Cloud Administrator job title.</li>
      <li>The <strong>IT System Administrator</strong> group should include any user with the System Administrator job title.</li>
      <li>The <strong>IT Lab Administrator</strong> group should include any user in the IT Cloud Administrator group or the IT System Administrator group.</li>
    </ul>
  </li>
  <li>Task 3: Create a Microsoft Entra tenant. This tenant will be used to demonstrate guest users.</li>
  <li>Task 4: Manage Microsoft Entra guest users.
    <ul>
      <li>In the new Microsoft Entra tenant create a System Administrator user, <strong>az104-01b-aaduser1</strong>.</li>
      <li>Invite the new user as a guest user to your subscription.</li>
    </ul>
  </li>
</ul>

<p>Task 1:</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213104416.png" alt="image-20240527213104416" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213308016.png" alt="image-20240527213308016" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213632925.png" alt="image-20240527213632925" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213658796.png" alt="image-20240527213658796" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213718690.png" alt="image-20240527213718690" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213820915.png" alt="image-20240527213820915" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213907247.png" alt="image-20240527213907247" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213949729.png" alt="image-20240527213949729" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527214041178.png" alt="image-20240527214041178" /></p>

<p>(Requires MFA)</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527214227141.png" alt="image-20240527214227141" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527214313747.png" alt="image-20240527214313747" /> (Able to create new users)</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527214826343.png" alt="image-20240527214826343" /></p>

<p>Change the name of the current directory</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527215354687.png" alt="image-20240527215354687" /></p>

<p>Dynamic Group Assignment requires P2 license</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527220024294.png" alt="image-20240527220024294" /></p>

<p>Create new tenant</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527220359922.png" alt="image-20240527220359922" /></p>

<p>Paid license needed if you want to create new MS Entra ID tenant</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527220541905.png" alt="image-20240527220541905" /></p>

<p>Invite external users</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527221910165.png" alt="image-20240527221910165" /></p>]]></content><author><name></name></author><summary type="html"><![CDATA[Features of Entra ID]]></summary></entry><entry><title type="html">CSS: layout of the header</title><link href="http://yourdomain.com/2024/05/22/css-flex-layout.html" rel="alternate" type="text/html" title="CSS: layout of the header" /><published>2024-05-22T16:24:00+00:00</published><updated>2024-05-22T16:24:00+00:00</updated><id>http://yourdomain.com/2024/05/22/css-flex-layout</id><content type="html" xml:base="http://yourdomain.com/2024/05/22/css-flex-layout.html"><![CDATA[<p>The final result can refer to the header banner of this page. ⬆️</p>

<h2 id="the-originals">the Originals</h2>

<p><img src="/assets/img/nyc-guidelines.jpg" alt="NYC MTA design guideline" /></p>

<h2 id="the-header">the Header</h2>

<p><img src="/assets/img/header.png" alt="header banner" /></p>

<h3 id="components">Components</h3>

<h4 id="brand">Brand</h4>

<h4 id="post-title">Post title</h4>

<h4 id="navigations">Navigations</h4>

<h2 id="responsive-layout">Responsive layout</h2>

<p>Using the grid system from Bootstrap, the header can adapt to different window/screen size by arranging its components  .</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">xs</code> and <code class="language-plaintext highlighter-rouge">sm</code></li>
</ul>

<p>Using media queries <code class="language-plaintext highlighter-rouge">@media</code> to manually add some style based on the width of the viewport.</p>

<h2 id="display-flex"><code class="language-plaintext highlighter-rouge">display: flex</code></h2>]]></content><author><name>jianing</name></author><category term="web" /><category term="css" /><summary type="html"><![CDATA[The final result can refer to the header banner of this page. ⬆️]]></summary></entry></feed>