<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://yourdomain.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://yourdomain.com/" rel="alternate" type="text/html" /><updated>2024-06-20T08:19:08+00:00</updated><id>http://yourdomain.com/feed.xml</id><title type="html">Your Site Title</title><subtitle>This is an example site description. You can use Markdown here.</subtitle><entry><title type="html">Azure Notes</title><link href="http://yourdomain.com/2024/06/02/azure-notes.html" rel="alternate" type="text/html" title="Azure Notes" /><published>2024-06-02T00:00:00+00:00</published><updated>2024-06-02T00:00:00+00:00</updated><id>http://yourdomain.com/2024/06/02/azure-notes</id><content type="html" xml:base="http://yourdomain.com/2024/06/02/azure-notes.html"><![CDATA[<h2 id="availability-set">Availability set</h2>

<h3 id="fault-domain">Fault Domain</h3>

<ul>
  <li><strong>Definition</strong>: A fault domain is essentially a group of VMs that share a common power source and network switch. By default, Azure distributes VMs in an availability set across up to three fault domains.</li>
  <li><strong>Purpose</strong>: Fault domains are designed to protect against hardware failures, such as issues with the physical server, rack, or data center. If one fault domain fails, the VMs in the other fault domains remain unaffected.</li>
  <li><strong>Example</strong>: If you have three VMs in an availability set, they might be placed in three different fault domains, ensuring that a failure in one domain (e.g., a network switch failure) does not affect the VMs in the other domains.</li>
</ul>

<h3 id="update-domain">Update Domain</h3>

<ul>
  <li><strong>Definition</strong>: An update domain is a group of VMs that can be updated or rebooted at the same time. By default, Azure distributes VMs in an availability set across up to five update domains.</li>
  <li><strong>Purpose</strong>: Update domains are used to manage the application of updates (e.g., patches or software updates) without causing downtime for all VMs in an availability set. Updates are applied one update domain at a time, ensuring that the VMs in other update domains remain available during the process.</li>
  <li><strong>Example</strong>: If you have five VMs in an availability set, they might be placed in five different update domains. During maintenance, Azure will update VMs in one update domain at a time, so only one-fifth of your VMs might be rebooted at any given time.</li>
</ul>

<h3 id="key-differences">Key Differences</h3>

<ul>
  <li><strong>Scope of Protection</strong>:
    <ul>
      <li>Fault Domain: Protects against hardware failures.</li>
      <li>Update Domain: Protects against simultaneous reboots during maintenance or updates.</li>
    </ul>
  </li>
  <li><strong>Number</strong>:
    <ul>
      <li>Fault Domain: Typically up to 3 fault domains.</li>
      <li>Update Domain: Typically up to 5 update domains.</li>
    </ul>
  </li>
  <li><strong>Function</strong>:
    <ul>
      <li>Fault Domain: Ensures VMs are spread across different physical hardware to mitigate hardware failure risk.</li>
      <li>Update Domain: Ensures VMs are updated or rebooted in phases to maintain service availability during maintenance.</li>
    </ul>
  </li>
</ul>

<h2 id="management-group">Management group</h2>

<p>In Microsoft Azure, a subscription can indeed be a member of only one management group at a time. Management groups in Azure are used to manage access, policy, and compliance across multiple Azure subscriptions. Each subscription must be associated with a single management group, but management groups can be nested to provide a hierarchical structure for management.</p>

<h2 id="sas">SAS</h2>

<p>Shared Access Signatures (SAS) in Microsoft Azure provide secure delegated access to resources in your storage account. A SAS token can be used to grant limited access to storage resources without exposing your account key. SAS tokens are supported by various Azure storage services, allowing you to fine-tune permissions and duration of access.</p>

<p>Supported services: <strong>Blob, Queue, Table, File</strong>.</p>

<h3 id="services-supported-by-sas-keys">Services Supported by SAS Keys</h3>

<ol>
  <li><strong>Azure Blob Storage:</strong>
    <ul>
      <li>Containers</li>
      <li>Blobs</li>
      <li>Blob snapshots</li>
      <li>Supports operations like reading, writing, deleting, listing, and setting metadata on blobs and containers.</li>
    </ul>
  </li>
  <li><strong>Azure Queue Storage:</strong>
    <ul>
      <li>Queues</li>
      <li>Messages</li>
      <li>Supports operations like adding, updating, reading, and deleting messages.</li>
    </ul>
  </li>
  <li><strong>Azure Table Storage:</strong>
    <ul>
      <li>Tables</li>
      <li>Entities</li>
      <li>Supports operations like querying, inserting, updating, and deleting table entities.</li>
    </ul>
  </li>
  <li><strong>Azure File Storage:</strong>
    <ul>
      <li>File shares</li>
      <li>Directories</li>
      <li>Files</li>
      <li>Supports operations like reading, writing, deleting files, and managing file shares and directories.</li>
    </ul>
  </li>
</ol>

<h3 id="types-of-sas-tokens">Types of SAS Tokens</h3>

<ol>
  <li><strong>Service SAS:</strong>
    <ul>
      <li>Grants access to resources in a specific service (Blob, Queue, Table, File).</li>
      <li>You can specify permissions, resource types, start and expiry times, and IP address range.</li>
    </ul>
  </li>
  <li><strong>Account SAS:</strong>
    <ul>
      <li>Grants access to resources in any service within the storage account.</li>
      <li>Provides more granular control, including access to service-level operations like listing the blobs in the account.</li>
      <li>Permissions include service operations, service-level actions, and the ability to use specific protocols.</li>
    </ul>
  </li>
  <li><strong>User Delegation SAS:</strong>
    <ul>
      <li>Available for Azure Blob Storage.</li>
      <li>Uses Azure Active Directory (Azure AD) credentials to secure the SAS.</li>
      <li>Allows generating SAS tokens with permissions defined by the user’s Azure AD roles.</li>
    </ul>
  </li>
</ol>

<h3 id="permissions-in-sas-tokens">Permissions in SAS Tokens</h3>

<ul>
  <li><strong>Read (r):</strong> Permits reading resources.</li>
  <li><strong>Write (w):</strong> Permits writing or creating new resources.</li>
  <li><strong>Delete (d):</strong> Permits deleting resources.</li>
  <li><strong>List (l):</strong> Permits listing resources.</li>
  <li><strong>Add (a):</strong> Permits adding messages (Queue Storage) or new resources.</li>
  <li><strong>Create (c):</strong> Permits creating new resources.</li>
  <li><strong>Update (u):</strong> Permits updating resources.</li>
  <li><strong>Process (p):</strong> Permits processing messages (Queue Storage).</li>
</ul>

<h3 id="example-use-cases">Example Use Cases</h3>

<ul>
  <li><strong>Blob Storage:</strong> Generate a SAS token to allow a client to upload images to a blob container without granting full access to the storage account.</li>
  <li><strong>File Storage:</strong> Create a SAS token to enable temporary access to a file share for a user to download files.</li>
  <li><strong>Queue Storage:</strong> Provide limited access to a queue for an application to add messages without exposing the queue’s full access key.</li>
  <li><strong>Table Storage:</strong> Grant access to a table for querying specific entities without exposing the entire storage account key.</li>
</ul>

<h3 id="using-an-azure-file-share-with-windows">Using an Azure file share with Windows</h3>

<p>To use an Azure file share with Windows, you must either mount it, which means assigning it a drive letter or mount point path, or <a href="https://learn.microsoft.com/en-us/azure/storage/files/storage-how-to-use-files-windows#access-an-azure-file-share-via-its-unc-path">access it via its UNC path</a>.</p>

<p>This article uses the storage account key to access the file share. A storage account key is an administrator key for a storage account, including administrator permissions to all files and folders within the file share you’re accessing, and for all file shares and other storage resources (blobs, queues, tables, etc.) contained within your storage account. If this isn’t sufficient for your workload, you can use <a href="https://learn.microsoft.com/en-us/azure/storage/file-sync/file-sync-planning">Azure File Sync</a> or <a href="https://learn.microsoft.com/en-us/azure/storage/files/storage-files-active-directory-overview">identity-based authentication over SMB</a>. <strong>Shared access signature (SAS) tokens aren’t currently supported for mounting Azure file shares.</strong></p>

<h3 id="conclusion">Conclusion</h3>

<p>SAS tokens provide a secure and flexible way to grant limited access to various Azure storage services. By leveraging SAS tokens, you can control access to your storage resources precisely, ensuring that users and applications have the permissions they need without exposing sensitive account keys.</p>

<h2 id="authorization-methods-for-azcopy">Authorization methods for <code class="language-plaintext highlighter-rouge">AzCopy</code></h2>

<ul>
  <li>MS Entra ID (AzureAD)</li>
  <li>SAS token</li>
</ul>

<h2 id="vm-scale-set">VM scale set</h2>

<p>Virtual Machine Scale Sets support both Linux and Windows VMs in Azure and can run up to <strong>1,000 VM</strong>s on a single scale set.</p>

<p>The criteria used to activate the upscale or downscale can depend on a customized schedule or actual demand and usage. Scale sets can apply the same configuration to a group of VMs simultaneously. They don’t require you to manually configure instances individually if you don’t want to.</p>

<p>Before you begin the upgrade process, the orchestrator will ensure that no more than 20% of instances in the entire scale set are unhealthy (for any reason), and for 1 instance at minimum (leq 5 instances).</p>

<h2 id="os-image-upgrade-versus-reimage">OS image upgrade versus reimage</h2>

<p>Both <strong>OS Image Upgrade</strong> and <strong><a href="https://learn.microsoft.com/en-us/rest/api/compute/virtual-machine-scale-sets/reimage">Reimage</a></strong> are methods used to update VMs within a scale set, but they serve different purposes and have distinct impacts.</p>

<p>OS image upgrade involves updating the underlying operating system image that is used to create new instances in a scale set. When you perform an OS image upgrade, Azure will create new VM instances with the updated OS image and gradually replace the old VM instances in the scale set with the new ones. This process is typically performed in stages to ensure high availability. OS image upgrades are a non-disruptive way to apply updates or changes to the underlying OS of the VMs in a scale set. Existing VM instances are not affected until they are replaced with the new instances.</p>

<p>Reimaging a VM instance in a scale set is a more immediate and disruptive action. When you choose to reimage a VM instance, Azure will stop the selected VM instance, perform the reimage operation, and then restart the VM using the same OS image. This effectively reinstalls the OS on that specific VM instance. Reimaging is typically used when you need to troubleshoot or reset a specific VM instance due to issues with that instance.</p>

<h2 id="general-roles">General roles</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Built-in role</th>
      <th style="text-align: left">Description</th>
      <th style="text-align: left">ID</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#contributor">Contributor</a></td>
      <td style="text-align: left">Grants full access to manage all resources, but does not allow you to assign roles in Azure RBAC, manage assignments in Azure Blueprints, or share image galleries.</td>
      <td style="text-align: left">b24988ac-6180-42a0-ab88-20f7382dd24c</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#owner">Owner</a></td>
      <td style="text-align: left">Grants full access to manage all resources, including the ability to assign roles in Azure RBAC.</td>
      <td style="text-align: left">8e3af657-a8ff-443c-a75c-2fe8c4bcb635</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#reader">Reader</a></td>
      <td style="text-align: left">View all resources, but does not allow you to make any changes.</td>
      <td style="text-align: left">acdd72a7-3385-48ef-bd42-f606fba81ae7</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#role-based-access-control-administrator">Role Based Access Control Administrator</a></td>
      <td style="text-align: left">Manage access to Azure resources by assigning roles using Azure RBAC. This role does not allow you to manage access using other ways, such as Azure Policy.</td>
      <td style="text-align: left">f58310d9-a9f6-439a-9e8d-f62e7b41a168</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general#user-access-administrator">User Access Administrator</a></td>
      <td style="text-align: left">Lets you manage user access to Azure resources.</td>
      <td style="text-align: left">18d7d88d-d35e-4fb5-a5c3-7773c20a72d9</td>
    </tr>
  </tbody>
</table>

<h2 id="vm-size-naming-convention">VM size naming convention</h2>

<ol>
  <li><strong>General purpose</strong>:
    <ul>
      <li>Prefix: D, A, B</li>
      <li>Suffix: s (standard), v (version), p (premium), l (low priority), d (disk), a (availability)</li>
      <li>Examples: B, Dsv3, Dv3, Dasv4, Dav4, DSv2, Dv2, Av2, Dpdsv5, Dpldsv5, Dpsv5, Dplsv5, Dv4, Dsv4, Ddv4, Ddsv4, Dv5, Dsv5, Ddv5, Ddsv5, Dasv5, Dadsv5, DCasv5, DCadsv5, DCesv5, DCedsv5</li>
    </ul>
  </li>
  <li><strong>Compute optimized</strong>:
    <ul>
      <li>Prefix: F</li>
      <li>Suffix: s (standard), v (version), X (special)</li>
      <li>Examples: F, Fs, Fsv2, FX</li>
    </ul>
  </li>
  <li><strong>Memory optimized</strong>:
    <ul>
      <li>Prefix: E, M, D (some overlap with general purpose)</li>
      <li>Suffix: s (standard), v (version), p (premium), d (disk), a (availability), C (confidential)</li>
      <li>Examples: Esv3, Ev3, Easv4, Eav4, Epdsv5, Epsv5, Ev4, Esv4, Edv4, Edsv4, Ev5, Esv5, Edv5, Edsv5, Easv5, Eadsv5, Mv2, M, DSv2, Dv2, ECasv5, ECadsv5, ECesv5, ECedsv5</li>
    </ul>
  </li>
  <li><strong>Storage optimized</strong>:
    <ul>
      <li>Prefix: L</li>
      <li>Suffix: s (standard), v (version), a (availability)</li>
      <li>Examples: Lsv2, Lsv3, Lasv3</li>
    </ul>
  </li>
  <li><strong>GPU</strong>:
    <ul>
      <li>Prefix: N</li>
      <li>Suffix: v (version), A (specific GPU type), T (Tesla), r (remote), X (special), s (standard), m (multi-instance)</li>
      <li>Examples: NC, NCv2, NCv3, NCasT4_v3, NCA100v4, ND, NDv2, NGadsV620, NV, NVv3, NVv4, NDasrA100_v4, NDm_A100_v4</li>
    </ul>
  </li>
  <li><strong>High performance compute</strong>:
    <ul>
      <li>Prefix: H</li>
      <li>Suffix: B (batch), C (compute), X (special), v (version)</li>
      <li>Examples: HB, HBv2, HBv3, HBv4, HC, HX</li>
    </ul>
  </li>
</ol>

<h2 id="vpn-gateways">VPN gateways</h2>

<p>https://learn.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-howto-vnet-vnet-resource-manager-portal</p>

<h2 id="vm-scale-set-az-vmss">VM scale set <code class="language-plaintext highlighter-rouge">az vmss</code></h2>

<p><code class="language-plaintext highlighter-rouge">az vmss scale</code> - change the number of VMs within a VMSS.</p>

<h2 id="port-numbers-for-common-protocols">Port numbers for common protocols</h2>

<table>
  <thead>
    <tr>
      <th><strong>Protocol</strong></th>
      <th><strong>Port Number</strong></th>
      <th><strong>Description</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>HTTP</strong></td>
      <td>80</td>
      <td>Hypertext Transfer Protocol for web traffic.</td>
    </tr>
    <tr>
      <td><strong>HTTPS</strong></td>
      <td>443</td>
      <td>Secure Hypertext Transfer Protocol for encrypted web traffic.</td>
    </tr>
    <tr>
      <td><strong>FTP</strong></td>
      <td>21</td>
      <td>File Transfer Protocol for transferring files.</td>
    </tr>
    <tr>
      <td><strong>FTPS</strong></td>
      <td>990</td>
      <td>Secure File Transfer Protocol over SSL/TLS.</td>
    </tr>
    <tr>
      <td><strong>SFTP</strong></td>
      <td>22</td>
      <td>Secure File Transfer Protocol over SSH.</td>
    </tr>
    <tr>
      <td><strong>SSH</strong></td>
      <td>22</td>
      <td>Secure Shell for secure remote login and command execution.</td>
    </tr>
    <tr>
      <td><strong>Telnet</strong></td>
      <td>23</td>
      <td>Telnet protocol for unencrypted remote login (not recommended).</td>
    </tr>
    <tr>
      <td><strong>SMTP</strong></td>
      <td>25</td>
      <td>Simple Mail Transfer Protocol for sending emails.</td>
    </tr>
    <tr>
      <td><strong>SMTPS</strong></td>
      <td>465</td>
      <td>Secure SMTP over SSL.</td>
    </tr>
    <tr>
      <td><strong>IMAP</strong></td>
      <td>143</td>
      <td>Internet Message Access Protocol for retrieving emails.</td>
    </tr>
    <tr>
      <td><strong>IMAPS</strong></td>
      <td>993</td>
      <td>Secure IMAP over SSL.</td>
    </tr>
    <tr>
      <td><strong>POP3</strong></td>
      <td>110</td>
      <td>Post Office Protocol version 3 for retrieving emails.</td>
    </tr>
    <tr>
      <td><strong>POP3S</strong></td>
      <td>995</td>
      <td>Secure POP3 over SSL.</td>
    </tr>
    <tr>
      <td><strong>RDP</strong></td>
      <td>3389</td>
      <td>Remote Desktop Protocol for remote desktop access.</td>
    </tr>
    <tr>
      <td><strong>DNS</strong></td>
      <td>53</td>
      <td>Domain Name System for resolving domain names.</td>
    </tr>
    <tr>
      <td><strong>MySQL</strong></td>
      <td>3306</td>
      <td>MySQL database service.</td>
    </tr>
    <tr>
      <td><strong>PostgreSQL</strong></td>
      <td>5432</td>
      <td>PostgreSQL database service.</td>
    </tr>
    <tr>
      <td><strong>SQL Server</strong></td>
      <td>1433</td>
      <td>Microsoft SQL Server database service.</td>
    </tr>
    <tr>
      <td><strong>Oracle DB</strong></td>
      <td>1521</td>
      <td>Oracle database service.</td>
    </tr>
    <tr>
      <td><strong>MongoDB</strong></td>
      <td>27017</td>
      <td>MongoDB database service.</td>
    </tr>
    <tr>
      <td><strong>Redis</strong></td>
      <td>6379</td>
      <td>Redis in-memory data structure store.</td>
    </tr>
    <tr>
      <td><strong>Memcached</strong></td>
      <td>11211</td>
      <td>Memcached caching service.</td>
    </tr>
    <tr>
      <td><strong>NTP</strong></td>
      <td>123</td>
      <td>Network Time Protocol for clock synchronization.</td>
    </tr>
    <tr>
      <td><strong>LDAP</strong></td>
      <td>389</td>
      <td>Lightweight Directory Access Protocol.</td>
    </tr>
    <tr>
      <td><strong>LDAPS</strong></td>
      <td>636</td>
      <td>Secure LDAP over SSL.</td>
    </tr>
    <tr>
      <td><strong>Kerberos</strong></td>
      <td>88</td>
      <td>Kerberos authentication protocol.</td>
    </tr>
    <tr>
      <td><strong>NetBIOS</strong></td>
      <td>137, 138, 139</td>
      <td>NetBIOS over TCP/IP for network services.</td>
    </tr>
    <tr>
      <td><strong>SMB/CIFS</strong></td>
      <td>445</td>
      <td>Server Message Block/Common Internet File System for file sharing.</td>
    </tr>
    <tr>
      <td><strong>VPN (PPTP)</strong></td>
      <td>1723</td>
      <td>Point-to-Point Tunneling Protocol for VPN.</td>
    </tr>
    <tr>
      <td><strong>IKEv2</strong></td>
      <td>500</td>
      <td>Internet Key Exchange for VPN.</td>
    </tr>
    <tr>
      <td><strong>L2TP</strong></td>
      <td>1701</td>
      <td>Layer 2 Tunneling Protocol for VPN.</td>
    </tr>
    <tr>
      <td><strong>ESP</strong></td>
      <td>50</td>
      <td>Encapsulating Security Payload for VPN.</td>
    </tr>
    <tr>
      <td><strong>GRE</strong></td>
      <td>47</td>
      <td>Generic Routing Encapsulation for VPN.</td>
    </tr>
  </tbody>
</table>

<h2 id="tutorial-create-a-site-to-site-vpn-connection">Tutorial: Create a site-to-site VPN connection</h2>

<h3 id="vnet-preparation">VNet preparation</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Address</th>
      <th>Note</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>TestRG1</td>
      <td>Resource Group</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>VNet1</td>
      <td>Virtual Network</td>
      <td>10.1.0.0/16</td>
      <td>Central Canada</td>
    </tr>
    <tr>
      <td>FrontEnd</td>
      <td>Subnet</td>
      <td>10.1.0.0/24</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606161716240.png" alt="image-20240606161716240" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606162220148.png" alt="image-20240606162220148" /></p>

<h3 id="create-a-gateway-subnet">Create a gateway subnet</h3>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606162615577.png" alt="image-20240606162615577" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606162600108.png" alt="image-20240606162600108" /></p>

<h3 id="create-a-vpn-gateway">Create a VPN gateway</h3>

<ol>
  <li>
    <p>In search bar, search “Virtual network gateways”</p>
  </li>
  <li>
    <p>Create a virtual network gateway with the following configs:</p>

    <p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240606163210724.png" alt="image-20240606163210724" /></p>
  </li>
</ol>

<h2 id="vm-backup">VM backup</h2>

<p>https://learn.microsoft.com/en-us/azure/backup/backup-azure-vms-first-look-arm</p>

<h2 id="sspr">SSPR</h2>

<p>SSPR is a centralized self-service password reset portal for accounts under Azure tenants.</p>

<p>Requirements:</p>

<ul>
  <li>P1 license and up</li>
  <li>Users with admin roles have more strict reset policies.
    <ul>
      <li>a strong default <em>two-gate</em> policy is enforced.
        <ul>
          <li>requires two pieces of authentication data:
            <ul>
              <li>Email address</li>
              <li>authenticator app</li>
              <li>phone number</li>
            </ul>
          </li>
          <li>security questions are prohibited</li>
        </ul>
      </li>
      <li>cmdlet <code class="language-plaintext highlighter-rouge">Update-MgPolicyAuthorizationPolicy</code> can be used to enable/disable SSPR for admin users with parameter <code class="language-plaintext highlighter-rouge">-AllowedToUseSspr</code></li>
    </ul>
  </li>
</ul>

<h2 id="dns-verification-process">DNS verification process</h2>

<p>The purpose of DNS verification using a TXT or MX record (containing a random token) is to confirm that the entity requesting the service owns the target domain. After verification, Azure provides the detailed configuration information to the verified domain owner.</p>

<p>To use custom domains, first we need to register this domain at a registrar, then, configure the name server to one of the Azure NSs. Then, we can use Azure to manage the domain (including connecting to vnets and more).</p>

<h3 id="dns-resolution-process">DNS Resolution Process</h3>

<ol>
  <li><strong>Local DNS Resolver</strong>:
    <ul>
      <li>When a user enters a domain name (e.g., <code class="language-plaintext highlighter-rouge">example.com</code>) in their browser, the request first goes to the user’s local DNS resolver, which is usually managed by their ISP or configured on their network.</li>
    </ul>
  </li>
  <li><strong>Check Local Cache</strong>:
    <ul>
      <li>The local DNS resolver checks its cache to see if it already has a recent response for the domain name. If it does, it returns the cached result, skipping further steps.</li>
    </ul>
  </li>
  <li><strong>Query the Root DNS Servers</strong>:
    <ul>
      <li>If the local DNS resolver does not have the cached result, it queries one of the root DNS servers. The root DNS servers know the authoritative servers for all top-level domains (TLDs, like <code class="language-plaintext highlighter-rouge">.com</code>, <code class="language-plaintext highlighter-rouge">.net</code>, etc.).</li>
    </ul>
  </li>
  <li><strong>TLD DNS Servers</strong>:
    <ul>
      <li>The root DNS server responds with the address of the TLD DNS server responsible for <code class="language-plaintext highlighter-rouge">.com</code> domains.</li>
      <li>The local DNS resolver then queries the TLD DNS server for <code class="language-plaintext highlighter-rouge">example.com</code>.</li>
    </ul>
  </li>
  <li><strong>Authoritative DNS Servers (Azure DNS)</strong>:
    <ul>
      <li>The TLD DNS server responds with the address of the authoritative DNS servers for <code class="language-plaintext highlighter-rouge">example.com</code>, which are the Azure DNS servers you configured.</li>
      <li>The local DNS resolver queries one of the Azure DNS servers for <code class="language-plaintext highlighter-rouge">example.com</code>.</li>
    </ul>
  </li>
  <li><strong>Retrieve DNS Records</strong>:
    <ul>
      <li>The Azure DNS server responds with the DNS records for <code class="language-plaintext highlighter-rouge">example.com</code> (e.g., the IP address associated with the domain).</li>
    </ul>
  </li>
  <li><strong>Return Response to Client</strong>:
    <ul>
      <li>The local DNS resolver caches the response and returns the result to the user’s machine.</li>
      <li>The browser can now connect to the IP address returned and load the website.</li>
    </ul>
  </li>
</ol>

<h3 id="example-walkthrough">Example Walkthrough</h3>

<ol>
  <li><strong>User Input</strong>:
    <ul>
      <li>User enters <code class="language-plaintext highlighter-rouge">www.example.com</code> in their browser.</li>
    </ul>
  </li>
  <li><strong>Local DNS Cache</strong>:
    <ul>
      <li>The local DNS resolver checks if <code class="language-plaintext highlighter-rouge">www.example.com</code> is in its cache.</li>
    </ul>
  </li>
  <li><strong>Root Server Query</strong>:
    <ul>
      <li>If not in cache, the local DNS resolver queries a root DNS server.</li>
    </ul>
  </li>
  <li><strong>TLD Server Query</strong>:
    <ul>
      <li>Root DNS server responds with the TLD DNS server for <code class="language-plaintext highlighter-rouge">.com</code>.</li>
    </ul>
  </li>
  <li><strong>Authoritative DNS Server Query</strong>:
    <ul>
      <li>The local DNS resolver queries the TLD DNS server for <code class="language-plaintext highlighter-rouge">example.com</code>.</li>
      <li>TLD DNS server responds with the Azure DNS servers.</li>
    </ul>
  </li>
  <li><strong>Azure DNS Response</strong>:
    <ul>
      <li>The local DNS resolver queries the Azure DNS server for <code class="language-plaintext highlighter-rouge">www.example.com</code>.</li>
      <li>Azure DNS server responds with the IP address (e.g., <code class="language-plaintext highlighter-rouge">192.0.2.1</code>).</li>
    </ul>
  </li>
  <li><strong>Browser Connects</strong>:
    <ul>
      <li>The local DNS resolver caches the response and returns the IP address to the browser.</li>
      <li>The browser connects to <code class="language-plaintext highlighter-rouge">192.0.2.1</code> and loads the website.</li>
    </ul>
  </li>
</ol>

<h2 id="storage-replication-strategies">Storage replication strategies</h2>

<p>LRS</p>

<p>ZRS</p>

<p>GRS</p>

<p>GZRS</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Node in data center unavailable</th>
      <th style="text-align: left">Entire data center unavailable</th>
      <th style="text-align: left">Region-wide outage</th>
      <th style="text-align: left">Read access during region-wide outage</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">- <strong>LRS</strong> - <strong>ZRS</strong> - <strong>GRS</strong> - <strong>RA-GRS</strong> - <strong>GZRS</strong> - <strong>RA-GZRS</strong></td>
      <td style="text-align: left">- <strong>ZRS</strong> - <strong>GRS</strong> - <strong>RA-GRS</strong> - <strong>GZRS</strong> - <strong>RA-GZRS</strong></td>
      <td style="text-align: left">- <strong>GRS</strong> - <strong>RA-GRS</strong> - <strong>GZRS</strong> - <strong>RA-GZRS</strong></td>
      <td style="text-align: left">- <strong>RA-GRS</strong> - <strong>RA-GZRS</strong></td>
    </tr>
  </tbody>
</table>

<h2 id="sas-features">SAS features</h2>

<ul>
  <li>Signing method</li>
  <li>Signing key
    <ul>
      <li>MS-managed keys</li>
      <li>customer-managed keys</li>
    </ul>
  </li>
  <li>Permissions</li>
  <li>Start and Expiry date/time</li>
  <li>Allowed IP</li>
  <li>Allowed protocols</li>
</ul>

<h3 id="uri-definitions">URI definitions</h3>

<ul>
  <li>Resource URI</li>
  <li><code class="language-plaintext highlighter-rouge">sv</code> - storage version</li>
  <li><code class="language-plaintext highlighter-rouge">ss</code> - storage service</li>
  <li><code class="language-plaintext highlighter-rouge">st</code> - start time</li>
  <li><code class="language-plaintext highlighter-rouge">se</code> - expiry time</li>
  <li><code class="language-plaintext highlighter-rouge">sr</code> - resource</li>
  <li><code class="language-plaintext highlighter-rouge">sp</code> - permissions</li>
  <li><code class="language-plaintext highlighter-rouge">sip</code> - ip range</li>
  <li><code class="language-plaintext highlighter-rouge">spr</code> - protocol</li>
  <li><code class="language-plaintext highlighter-rouge">sig</code> - signature</li>
</ul>

<h2 id="summary-of-supported-authentication-methods-in-azcopy">Summary of supported authentication methods in <code class="language-plaintext highlighter-rouge">azcopy</code></h2>

<table>
  <thead>
    <tr>
      <th>Service</th>
      <th>Supported Authentication Methods</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Azure Blob Storage</strong></td>
      <td>SAS, OAuth</td>
    </tr>
    <tr>
      <td><strong>Azure Files</strong></td>
      <td>Share/Directory SAS</td>
    </tr>
    <tr>
      <td><strong>Azure Data Lake Storage Gen2</strong></td>
      <td>SAS, OAuth, Shared Key</td>
    </tr>
    <tr>
      <td><strong>AWS S3 to Azure Blob</strong></td>
      <td>Access Key (AWS) to SAS, OAuth (Azure Blob)</td>
    </tr>
    <tr>
      <td><strong>Google Cloud Storage to Azure Blob</strong></td>
      <td>Service Account Key (GCS) to SAS, OAuth (Azure Blob)</td>
    </tr>
  </tbody>
</table>

<h2 id="azure-backup-services">Azure backup services</h2>

<h3 id="access-tiers">Access tiers</h3>

<table>
  <thead>
    <tr>
      <th>Feature</th>
      <th>Snapshot Tier</th>
      <th>Vault-Standard Tier</th>
      <th>Archive Tier</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Storage Location</strong></td>
      <td>Customer’s subscription</td>
      <td>Microsoft-managed tenant</td>
      <td>Long-term, low-cost storage</td>
    </tr>
    <tr>
      <td><strong>Restoration Speed</strong></td>
      <td>Fastest</td>
      <td>Moderate</td>
      <td>Slowest</td>
    </tr>
    <tr>
      <td><strong>Availability</strong></td>
      <td>Locally available</td>
      <td>Isolated copy</td>
      <td>For compliance, rarely accessed</td>
    </tr>
    <tr>
      <td><strong>Use Cases</strong></td>
      <td>Quick restores</td>
      <td>Regular backup and restore operations</td>
      <td>Long-term retention for compliance</td>
    </tr>
    <tr>
      <td><strong>RTO</strong></td>
      <td>Low</td>
      <td>Moderate</td>
      <td>High</td>
    </tr>
    <tr>
      <td><strong>Pricing</strong></td>
      <td>Higher storage cost</td>
      <td>Moderate cost</td>
      <td>Lowest cost</td>
    </tr>
  </tbody>
</table>

<h3 id="built-in-security-measures">Built-in security measures</h3>

<ul>
  <li>RBAC</li>
  <li>Encryption</li>
  <li>Soft-delete</li>
</ul>

<h3 id="vm-protections">VM Protections</h3>

<ul>
  <li>
    <p>Azure Backup</p>

    <p>Snapshot of the entire vm. Restore the entire</p>
  </li>
  <li>
    <p>Azure Site Recovery</p>
  </li>
  <li>
    <p>Azure managed disks</p>

    <ul>
      <li>snapshot</li>
      <li>image</li>
    </ul>
  </li>
</ul>

<p>images - the whole vm</p>

<p>snapshots - one disk</p>

<p>operating disk backups - for vm with only one disk</p>

<h3 id="soft-delete">Soft delete</h3>

<p>Steps:</p>

<ul>
  <li>Stop backup job</li>
  <li>Apply soft-delete state</li>
  <li>View soft-delete data in the vault - during the 14 day retention period.</li>
  <li>Undelete backup items</li>
  <li>Restore items</li>
  <li>Resume backups</li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[Availability set]]></summary></entry><entry><title type="html">Azure Storage</title><link href="http://yourdomain.com/2024/05/30/azure-storage.html" rel="alternate" type="text/html" title="Azure Storage" /><published>2024-05-30T00:00:00+00:00</published><updated>2024-05-30T00:00:00+00:00</updated><id>http://yourdomain.com/2024/05/30/azure-storage</id><content type="html" xml:base="http://yourdomain.com/2024/05/30/azure-storage.html"><![CDATA[<h2 id="install-azure-cli">Install Azure CLI</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install azure-cli
</code></pre></div></div>

<h2 id="login-to-azure-in-azure-cli">Login to Azure in Azure CLI</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az login
</code></pre></div></div>

<p>A browser will start and perform the authentication process.</p>

<h2 id="auth-modes">Auth modes</h2>

<table>
  <thead>
    <tr>
      <th><strong>Authentication Mode</strong></th>
      <th><strong>Description</strong></th>
      <th><strong>Pros</strong></th>
      <th><strong>Cons</strong></th>
      <th><strong>Use Cases</strong></th>
      <th><strong>Command Example</strong></th>
      <th><strong>Parameters</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Shared Key Authorization</strong></td>
      <td>Uses the storage account name and account key.</td>
      <td>Easy to use, straightforward for development.</td>
      <td>Security risks if account keys are shared.</td>
      <td>Development, some production scenarios.</td>
      <td><code class="language-plaintext highlighter-rouge">az storage blob upload --account-name myaccount --account-key myaccountkey --container-name mycontainer --name myblob --file myfile</code></td>
      <td><code class="language-plaintext highlighter-rouge">--account-name</code>, <code class="language-plaintext highlighter-rouge">--account-key</code>, <code class="language-plaintext highlighter-rouge">--container-name</code>, <code class="language-plaintext highlighter-rouge">--name</code>, <code class="language-plaintext highlighter-rouge">--file</code></td>
    </tr>
    <tr>
      <td><strong>Shared Access Signature (SAS)</strong></td>
      <td>Provides delegated access with specific permissions and expiration.</td>
      <td>Fine-grained control over permissions and expiration.</td>
      <td>Needs careful management to avoid security risks.</td>
      <td>Temporary access, limited permissions.</td>
      <td><code class="language-plaintext highlighter-rouge">az storage blob upload --sas-token mySASToken --container-name mycontainer --name myblob --file myfile</code></td>
      <td><code class="language-plaintext highlighter-rouge">--sas-token</code>, <code class="language-plaintext highlighter-rouge">--container-name</code>, <code class="language-plaintext highlighter-rouge">--name</code>, <code class="language-plaintext highlighter-rouge">--file</code></td>
    </tr>
    <tr>
      <td><strong>Azure Active Directory (Azure AD)</strong></td>
      <td>Provides role-based access control (RBAC) using Azure AD identities.</td>
      <td>Provides RBAC, integrates with Azure AD.</td>
      <td>More complex setup compared to shared key or SAS.</td>
      <td>Production, enterprise environments.</td>
      <td><code class="language-plaintext highlighter-rouge">az login \n az storage blob upload --account-name myaccount --container-name mycontainer --name myblob --file myfile --auth-mode login</code></td>
      <td><code class="language-plaintext highlighter-rouge">--account-name</code>, <code class="language-plaintext highlighter-rouge">--container-name</code>, <code class="language-plaintext highlighter-rouge">--name</code>, <code class="language-plaintext highlighter-rouge">--file</code>, <code class="language-plaintext highlighter-rouge">--auth-mode</code></td>
    </tr>
    <tr>
      <td><strong>Managed Identities</strong></td>
      <td>Uses automatically managed identity for Azure resources to authenticate.</td>
      <td>Simplifies identity management, no credentials needed.</td>
      <td>Requires services to support managed identities.</td>
      <td>Production, simplifying identity management.</td>
      <td><code class="language-plaintext highlighter-rouge">az login --identity \n az storage blob upload --account-name myaccount --container-name mycontainer --name myblob --file myfile --auth-mode login</code></td>
      <td><code class="language-plaintext highlighter-rouge">--account-name</code>, <code class="language-plaintext highlighter-rouge">--container-name</code>, <code class="language-plaintext highlighter-rouge">--name</code>, <code class="language-plaintext highlighter-rouge">--file</code>, <code class="language-plaintext highlighter-rouge">--auth-mode</code></td>
    </tr>
    <tr>
      <td><strong>OAuth Bearer Token</strong></td>
      <td>Uses OAuth tokens obtained from Azure AD to authenticate.</td>
      <td>Supports OAuth 2.0, flexible token-based authentication.</td>
      <td>Requires handling OAuth token lifecycle.</td>
      <td>Token-based scenarios, custom authentication flows.</td>
      <td><code class="language-plaintext highlighter-rouge">TOKEN=$(az account get-access-token --resource https://storage.azure.com/ --query accessToken --output tsv) \n curl -X PUT -H "Authorization: Bearer $TOKEN" -T myfile "https://myaccount.blob.core.windows.net/mycontainer/myblob"</code></td>
      <td><code class="language-plaintext highlighter-rouge">--resource</code>, <code class="language-plaintext highlighter-rouge">--query</code>, <code class="language-plaintext highlighter-rouge">--output</code> (for <code class="language-plaintext highlighter-rouge">az account get-access-token</code>), <code class="language-plaintext highlighter-rouge">-X PUT</code>, <code class="language-plaintext highlighter-rouge">-H "Authorization: Bearer $TOKEN"</code>, <code class="language-plaintext highlighter-rouge">-T myfile</code> (for <code class="language-plaintext highlighter-rouge">curl</code>)</td>
    </tr>
  </tbody>
</table>

<ul>
  <li><strong>Account Key</strong>:
    <ul>
      <li>Suitable for full administrative control and development purposes.</li>
      <li>Provides access to all resources within the storage account.</li>
      <li>Higher security risk due to the breadth of access granted.</li>
    </ul>
  </li>
  <li><strong>Shared Access Signature (SAS)</strong>:
    <ul>
      <li>Suitable for scenarios requiring delegated, limited access.</li>
      <li>Provides granular control over permissions, resources, and duration.</li>
      <li>Enhances security by restricting access based on permissions, IP, and protocol.</li>
    </ul>
  </li>
</ul>

<h2 id="azure-blobs">Azure blobs</h2>

<blockquote>
  <p>Using account-key authentication methods</p>

  <p>Account keys can be found here:</p>

  <p><img src="/Users/aoi/Desktop/Screenshot 2024-05-30 at 5.09.24 PM.png" alt="Screenshot 2024-05-30 at 5.09.24 PM" /></p>
</blockquote>

<h3 id="create-a-container">Create a container</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az storage container create \
--name $container-name \
--account-name $storage-account \
--account-key $storage-access-key \
</code></pre></div></div>

<p><img src="/Users/aoi/Desktop/Screenshot 2024-05-30 at 5.12.13 PM.png" alt="Screenshot 2024-05-30 at 5.12.13 PM" /></p>

<h3 id="upload-a-file-to-the-container">Upload a file to the container</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az storage blob upload \
--file $file \
--container-name $container-name \
--account-name $storage-account \
--account-key $storage-access-key
</code></pre></div></div>

<p><img src="/Users/aoi/Desktop/Screenshot 2024-05-30 at 5.34.14 PM.png" alt="Screenshot 2024-05-30 at 5.34.14 PM" /></p>

<h3 id="upload-multiple-files-recursively">Upload multiple files recursively</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az storage blob upload-batch \
--destination $container-name \
--source $path \
--pattern *.png \
--account-name $storage-account \
--account-key $storage-access-key
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[Install Azure CLI]]></summary></entry><entry><title type="html">Azure Sas</title><link href="http://yourdomain.com/2024/05/27/Azure-SAS.html" rel="alternate" type="text/html" title="Azure Sas" /><published>2024-05-27T00:00:00+00:00</published><updated>2024-05-27T00:00:00+00:00</updated><id>http://yourdomain.com/2024/05/27/Azure-SAS</id><content type="html" xml:base="http://yourdomain.com/2024/05/27/Azure-SAS.html"><![CDATA[<h2 id="features-of-entra-id">Features of Entra ID</h2>

<h3 id="sso-access">SSO access</h3>

<h3 id="ubiquitous-device-support">Ubiquitous device support</h3>

<h3 id="secure-remote-access">Secure remote access</h3>

<h3 id="cloud-extensibility">Cloud extensibility</h3>

<h3 id="sensitive-data-protection">Sensitive data protection</h3>

<h3 id="self-service-support">Self-service support</h3>

<h2 id="concepts">Concepts</h2>

<h3 id="identity">Identity</h3>

<h3 id="account">Account</h3>

<h3 id="ms-entra-account">MS Entra account</h3>

<h3 id="azure-tenant-directory---a-single-organization">Azure tenant (directory) - a single organization</h3>

<h3 id="azure-subscription">Azure subscription</h3>

<h2 id="create-user-accounts">Create user accounts</h2>

<h3 id="lab-scenario">Lab scenario</h3>

<p>Your organization will be using Microsoft Entra authentication. You’ve been tasked with provisioning the required user and group accounts. Membership of the groups should be updated automatically based on the user job titles. You also need to invite guest users from another tenant. These guest users should have only limited permissions to resources in your subscription.</p>

<p>Your organization has these specific requirements:</p>

<ul>
  <li>Any user with the Cloud Administrator job title should be assigned to the IT Cloud Administrator group.</li>
  <li>Any user with the System Administrator job title should be assigned to the IT System Administrator group.</li>
  <li>Any user that is a member of the IT Cloud Administrator group or the IT System Administrator group should be assigned to the IT Lab Administrator group.</li>
  <li>A System Administrator in another Active Directory tenant should be invited as guest user with limited permissions.</li>
</ul>

<h3 id="architecture-diagram">Architecture diagram</h3>

<p><img src="https://learn.microsoft.com/en-us/training/wwl-azure/configure-user-group-accounts/media/lab-01.png" alt="Architecture diagram as explained in the text." /></p>

<h3 id="objectives">Objectives</h3>

<ul>
  <li>Task 1: Create and configure Microsoft Entra users.
    <ul>
      <li>User <strong>AZ104-01a-aaduser1</strong> will be a Cloud Administrator assigned the User Administrator role.</li>
      <li>User <strong>AZ104-01a-aaduser2</strong> will be a System Administrator.</li>
    </ul>
  </li>
  <li>Task 2: Create AD groups with assigned and dynamic membership.
    <ul>
      <li>The <strong>IT Cloud Administrator</strong> group should include any user with the Cloud Administrator job title.</li>
      <li>The <strong>IT System Administrator</strong> group should include any user with the System Administrator job title.</li>
      <li>The <strong>IT Lab Administrator</strong> group should include any user in the IT Cloud Administrator group or the IT System Administrator group.</li>
    </ul>
  </li>
  <li>Task 3: Create a Microsoft Entra tenant. This tenant will be used to demonstrate guest users.</li>
  <li>Task 4: Manage Microsoft Entra guest users.
    <ul>
      <li>In the new Microsoft Entra tenant create a System Administrator user, <strong>az104-01b-aaduser1</strong>.</li>
      <li>Invite the new user as a guest user to your subscription.</li>
    </ul>
  </li>
</ul>

<p>Task 1:</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213104416.png" alt="image-20240527213104416" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213308016.png" alt="image-20240527213308016" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213632925.png" alt="image-20240527213632925" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213658796.png" alt="image-20240527213658796" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213718690.png" alt="image-20240527213718690" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213820915.png" alt="image-20240527213820915" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213907247.png" alt="image-20240527213907247" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527213949729.png" alt="image-20240527213949729" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527214041178.png" alt="image-20240527214041178" /></p>

<p>(Requires MFA)</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527214227141.png" alt="image-20240527214227141" /></p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527214313747.png" alt="image-20240527214313747" /> (Able to create new users)</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527214826343.png" alt="image-20240527214826343" /></p>

<p>Change the name of the current directory</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527215354687.png" alt="image-20240527215354687" /></p>

<p>Dynamic Group Assignment requires P2 license</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527220024294.png" alt="image-20240527220024294" /></p>

<p>Create new tenant</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527220359922.png" alt="image-20240527220359922" /></p>

<p>Paid license needed if you want to create new MS Entra ID tenant</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527220541905.png" alt="image-20240527220541905" /></p>

<p>Invite external users</p>

<p><img src="/Users/aoi/Library/Application Support/typora-user-images/image-20240527221910165.png" alt="image-20240527221910165" /></p>]]></content><author><name></name></author><summary type="html"><![CDATA[Features of Entra ID]]></summary></entry><entry><title type="html">CSS: layout of the header</title><link href="http://yourdomain.com/2024/05/22/css-flex-layout.html" rel="alternate" type="text/html" title="CSS: layout of the header" /><published>2024-05-22T16:24:00+00:00</published><updated>2024-05-22T16:24:00+00:00</updated><id>http://yourdomain.com/2024/05/22/css-flex-layout</id><content type="html" xml:base="http://yourdomain.com/2024/05/22/css-flex-layout.html"><![CDATA[<p>The final result can refer to the header banner of this page. ⬆️</p>

<h2 id="the-originals">the Originals</h2>

<p><img src="/assets/img/nyc-guidelines.jpg" alt="NYC MTA design guideline" /></p>

<h2 id="the-header">the Header</h2>

<p><img src="/assets/img/header.png" alt="header banner" /></p>

<h3 id="components">Components</h3>

<h4 id="brand">Brand</h4>

<h4 id="post-title">Post title</h4>

<h4 id="navigations">Navigations</h4>

<h2 id="responsive-layout">Responsive layout</h2>

<p>Using the grid system from Bootstrap, the header can adapt to different window/screen size by arranging its components  .</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">xs</code> and <code class="language-plaintext highlighter-rouge">sm</code></li>
</ul>

<p>Using media queries <code class="language-plaintext highlighter-rouge">@media</code> to manually add some style based on the width of the viewport.</p>

<h2 id="display-flex"><code class="language-plaintext highlighter-rouge">display: flex</code></h2>]]></content><author><name>jianing</name></author><category term="web" /><category term="css" /><summary type="html"><![CDATA[The final result can refer to the header banner of this page. ⬆️]]></summary></entry><entry><title type="html">the dual problem of SVM</title><link href="http://yourdomain.com/2023/03/05/SVM-dual-problem.html" rel="alternate" type="text/html" title="the dual problem of SVM" /><published>2023-03-05T12:00:00+00:00</published><updated>2023-03-05T12:00:00+00:00</updated><id>http://yourdomain.com/2023/03/05/SVM-dual-problem</id><content type="html" xml:base="http://yourdomain.com/2023/03/05/SVM-dual-problem.html"><![CDATA[<p>Support Vector Machines (SVM) are supervised learning models used for classification and regression tasks. The dual problem formulation of SVM provides an alternative perspective that can be computationally advantageous, particularly for high-dimensional feature spaces.</p>

<h3 id="primal-problem">Primal Problem</h3>

<p>The primal form of the SVM optimization problem is given by:</p>

\[\begin{align}
\min_{\mathbf{w}, b, \xi} \quad &amp; \frac{1}{2} \|\mathbf{w}\|^2 + C \sum_{i=1}^{n} \xi_i \\
\text{subject to} \quad &amp; y_i (\mathbf{w} \cdot \mathbf{x}_i + b) \geq 1 - \xi_i, \\
&amp; \xi_i \geq 0, \quad i = 1, \ldots, n.
\end{align}\]

<h3 id="dual-problem">Dual Problem</h3>

<p>By applying the Lagrangian method, we can transform the primal problem into its dual form. The dual problem is expressed as:</p>

\[\begin{align}
\max_{\boldsymbol{\alpha}} \quad &amp; \sum_{i=1}^{n} \alpha_i - \frac{1}{2} \sum_{i=1}^{n} \sum_{j=1}^{n} \alpha_i \alpha_j y_i y_j (\mathbf{x}_i \cdot \mathbf{x}_j) \\
\text{subject to} \quad &amp; \sum_{i=1}^{n} \alpha_i y_i = 0, \\
&amp; 0 \leq \alpha_i \leq C, \quad i = 1, \ldots, n.
\end{align}\]

<p>Here, \( \boldsymbol{\alpha} = (\alpha_1, \alpha_2, \ldots, \alpha_n) \) are the Lagrange multipliers. The dual formulation simplifies the optimization problem by transforming it into a quadratic programming problem that only depends on the inner products of the training data points.</p>

<h3 id="advantages-of-the-dual-problem">Advantages of the Dual Problem</h3>

<ol>
  <li><strong>Kernel Trick</strong>: The dual problem allows the use of kernel functions to handle non-linear decision boundaries without explicitly mapping the data to a higher-dimensional space.</li>
  <li><strong>Efficiency</strong>: For high-dimensional data, the dual problem can be more computationally efficient to solve than the primal problem.</li>
</ol>

<p>In conclusion, the dual formulation of SVMs provides critical computational and conceptual benefits, particularly in handling complex, high-dimensional data.</p>]]></content><author><name>Jianing</name></author><category term="machine learning" /><summary type="html"><![CDATA[Support Vector Machines (SVM) are supervised learning models used for classification and regression tasks. The dual problem formulation of SVM provides an alternative perspective that can be computationally advantageous, particularly for high-dimensional feature spaces.]]></summary></entry><entry><title type="html">shellcode development - lab02</title><link href="http://yourdomain.com/2023/01/17/shellcode-development.html" rel="alternate" type="text/html" title="shellcode development - lab02" /><published>2023-01-17T12:00:00+00:00</published><updated>2023-01-17T12:00:00+00:00</updated><id>http://yourdomain.com/2023/01/17/shellcode-development</id><content type="html" xml:base="http://yourdomain.com/2023/01/17/shellcode-development.html"><![CDATA[<h3 id="1-printing-on-the-screen">1. Printing on the Screen</h3>

<p>Program using Relative Addressing technique</p>

<p><code class="language-plaintext highlighter-rouge">src/task1/print_rel.asm</code></p>

<pre><code class="language-assembly">[SECTION .text]
global _start
_start:
        jmp saveme			; (complete)	jump to the call instruction that right
        								;							before the "Hello, world!" string
shellcode:
				pop esi					; (complete)	pop the top value of stack (address of
												;							msg) and save to esi register
												
        mov eax, 4  		; (complete)	opcode for write system call
        mov ebx, 1  		; (complete)	1st arg is the fd (1 = STDOUT)
        mov ecx, esi  	; (complete)	2nd arg is the string address
        mov edx, 15   	; 3rd arg is len
        int 0x80      	; system call interrupt

        mov eax, 1    	; opcode for exit system call
        mov ebx, 0    	; 1st arg, exit(0)
        int 0x80      	; system call interrupt
 saveme:
        call shellcode	; (complete)	jump back to the 1st instruction after jmp
        								;							instruction, and save the address of 
        								;							msg on the top of stack
        msg db "Hello, world!", 0xA, 0xD
</code></pre>

<p><img src="/assets/screenshots/1-1-rel.png" alt="1-1-rel" /></p>

<p>Program using Stack methods</p>

<p><code class="language-plaintext highlighter-rouge">src/task1/print_stk.asm</code></p>

<pre><code class="language-assembly">[SECTION .text]
global _start
_start:
        mov eax, 0
        push eax
        push 0x000a0d21	; hex format of "!\r\n\0"
        push "orld"
        push "o, w"			; (complete)	push "o, w" to stack
        push "Hell"			; (complete)	push "Hell" to stack

        mov eax, 4			; (complete)	opcode for write system call
        mov ebx, 1			; (complete)	1st arg is the fd (1 = STDOUT)
        mov ecx, esp		; (complete)	2nd arg is the string address (stack top)
				mov edx, 15			; 3rd arg, len
        int 0x80				; system call interrupt

        mov eax, 1			; opcode for exit system call
        mov ebx, 0			; 1st arg, exit(0)
        int 0x80				; system call interrupt
</code></pre>

<p><img src="/assets/screenshots/1-2-stk.png" alt="1-2-stk" /></p>

<blockquote>
  <p><em>(a) In <code class="language-plaintext highlighter-rouge">print_stk.asm</code>, explain how the line “<code class="language-plaintext highlighter-rouge">push 0x000a0d21</code>” works. Show a screenshot from gdb to support your explanation.</em></p>
</blockquote>

<p>From the gdb disassembler, the line <code class="language-plaintext highlighter-rouge">push 0x000a0d21</code> is located in memory at <code class="language-plaintext highlighter-rouge">0x08048066</code>.</p>

<p><img src="/assets/screenshots/1-1-1-disassembler.png" alt="1-1-1-disassembler" /></p>

<p>I set a breakpoint at <code class="language-plaintext highlighter-rouge">_start</code> and used <code class="language-plaintext highlighter-rouge">si</code> command to execute one instruction each time. When the program is running before executing the instruction of <code class="language-plaintext highlighter-rouge">push 0x000a0d21</code>, from the status of all registers,</p>

<p><img src="/assets/screenshots/1-1-2-registers-before.png" alt="1-1-2-registers-before" /></p>

<p>we can see that the current stack top address in memory is <code class="language-plaintext highlighter-rouge">0xbffff5fc</code>, and the value inside is <code class="language-plaintext highlighter-rouge">0x0</code>.</p>

<p>Then, after running the <code class="language-plaintext highlighter-rouge">push 0x000a0d21</code> instruction. From the register info, we can see that the value <code class="language-plaintext highlighter-rouge">0x000a0d21</code> is pushed into stack and the value of register <code class="language-plaintext highlighter-rouge">esp</code> has changed to <code class="language-plaintext highlighter-rouge">0xbffff5f8</code> (deduced 4), pointing to address of the top of stack.</p>

<p><img src="/assets/screenshots/1-1-3-registers-after.png" alt="1-1-3-registers-after" /></p>

<blockquote>
  <p><em>(b) Also, in the same file, explain how you got the string address. Show a screenshot from gdb to support your explanation.</em></p>
</blockquote>

<p>I used instruction <code class="language-plaintext highlighter-rouge">mov ecx, esp</code> to get the string address where it sets <code class="language-plaintext highlighter-rouge">ecx</code> register to the value inside <code class="language-plaintext highlighter-rouge">esp</code>. The <code class="language-plaintext highlighter-rouge">esp</code> register keeps the address of the stack top which points to one segment of the string <code class="language-plaintext highlighter-rouge">Hello, world!\r\n</code>.</p>

<p>By executing instructions one by one, from gdb, we can see that after <code class="language-plaintext highlighter-rouge">mov ecx, esp</code> is executed, the <code class="language-plaintext highlighter-rouge">ecx</code> register holds the address points to the string. Then, the system call <code class="language-plaintext highlighter-rouge">write</code> can use the string address as second argument.</p>

<p><img src="/assets/screenshots/1-2-1-register-after.png" alt="1-2-1-register-after" /></p>

<hr />

<h3 id="2-spawning-a-shell">2. Spawning a Shell</h3>

<h4 id="21-startup-code-labshasm">2.1 Startup Code (labsh.asm)</h4>

<blockquote>
  <ol>
    <li><em>The process number of both the calling shell and the spawned shell using “<code class="language-plaintext highlighter-rouge">echo $$</code>”.</em></li>
  </ol>
</blockquote>

<p><img src="/assets/screenshots/2-1-1.png" alt="2-1-1" /></p>

<blockquote>
  <ol>
    <li><em>The passed environment variables to the spawned shell using “<code class="language-plaintext highlighter-rouge">/usr/bin/env</code>”</em></li>
  </ol>
</blockquote>

<p><img src="/assets/screenshots/2-1-2-usr-bin-env.png" alt="2-1-2-usr-bin-env" /></p>

<h4 id="22-providing-arguments-to-binsh">2.2 Providing Arguments to <code class="language-plaintext highlighter-rouge">/bin/sh</code></h4>

<p>I constructed the argument string “<code class="language-plaintext highlighter-rouge">-c</code>” and “<code class="language-plaintext highlighter-rouge">ls -la</code>” by pushing them into stack and use <code class="language-plaintext highlighter-rouge">esi</code> register to keep their address in memory. When constructing <code class="language-plaintext highlighter-rouge">argv</code>, I pushed the address of each argument string into the stack to form an array of strings.</p>

<p><code class="language-plaintext highlighter-rouge">src/task2/labsh_args.asm</code></p>

<pre><code class="language-assembly">section .text
  global _start
    _start:
      mov  eax, 0
      push eax          ; Use 0 to terminate the string
      push "//sh"
      push "/bin"
      mov  ebx, esp     ; Get the string address of "/bin//sh"

      ; push "-c" and "ls -la" into stack
      push eax
      push "-c"
      push eax
      push "la"
      push "ls -"
      mov esi, esp			; Keep the current stack top address to esi register
      
      ; Construct the argument array argv[]
      push eax					; argv[3] = 0, EOL
      push esi					; argv[2] points to "ls -la"
      add esi, 12				; move the esi register to point to "-c"
      push esi					; argv[1] points to "-c"
      add esi, 20				; move the esi register to point to "/bin//sh"
      push esi					; argv[0] points to "/bin//sh"
      mov  ecx, esp     ; Get the address of argv[]

      ; For environment variable 
      mov edx, 0     		; No env variables 

      ; Call execve()
      mov  eax, 0     	; eax = 0x00000000
      mov  al, 0x0b    	; eax = 0x0000000b
      int  0x80
</code></pre>

<p><img src="/assets/screenshots/2-2-1-result.png" alt="2-2-1-result" /></p>

<h4 id="23-providing-env-variable-to-binsh">2.3 Providing Env. Variable to <code class="language-plaintext highlighter-rouge">/bin/sh</code></h4>

<p>I constructed environment variable strings by pushing them into stack and use <code class="language-plaintext highlighter-rouge">esi</code> register to keep their address in memory as in the 2.2. When constructing <code class="language-plaintext highlighter-rouge">envp</code>, I pushed the address of each envrionment variable string into the stack to form an array of strings.</p>

<p><code class="language-plaintext highlighter-rouge">src/task2/labsh_env.asm</code></p>

<pre><code class="language-assembly">section .text
  global _start
    _start:
      ; Store the argument string on stack
      mov  	eax, 0
      push 	eax					; Use 0 to terminate the string
      push 	"//sh"
      push 	"/bin"
      mov  	ebx, esp		; Get the string address

			; Construct the argument array argv[] = { NULL }
      mov 	ecx, eax
 			
			; Construct the envrionment variable strings
      push 	eax
      push 	"4"
      push 	"=123"
      push 	"aaaa"
      push 	eax
      push 	"8"
      push 	"=567"
      push 	"bbbb"
      push 	eax
      push 	"4"
      push 	"=123"
      push 	"cccc"
      mov 	esi, esp	; Save the address of stack top to esi
      
      ; Construct the environment array envp[]
      push 	eax				; envp[3] = 0, EOL
      push 	esi				; envp[2] points to "cccc=1234"
      add 	esi, 16 	; move the esi to point to next string
      push 	esi				; envp[1] points to "bbbb=5678"
      add 	esi, 16 	; move the esi to point to next string
      push 	esi				; envp[0] points to "aaaa=1234"
      mov  	edx, esp	; Get the address of envp[]

      ; Call execve()
      mov  	eax, 0		; eax = 0x00000000
      mov  	al, 0x0b	; eax = 0x0000000b
      int  	0x80
</code></pre>

<p><img src="/assets/screenshots/2-3-1-result.png" alt="2-3-1-result" /></p>

<h4 id="24-using-the-relative-addressing-technique">2.4 Using the Relative Addressing Technique</h4>

<p>First, the program jumps to a <code class="language-plaintext highlighter-rouge">call</code> instruction at line 19, right before the the string.</p>

<p><img src="/assets/screenshots/2-4-2-start.png" alt="2-4-2-start" /></p>

<p>Then, the program executes the <code class="language-plaintext highlighter-rouge">call</code> instruction and jumps back to the instruction after the previous <code class="language-plaintext highlighter-rouge">jmp</code> instruction, and push the address of the string <code class="language-plaintext highlighter-rouge">/bin/sh*AAAABBBB</code> into stack.</p>

<p><img src="/assets/screenshots/2-4-3-one.png" alt="2-4-3-one" /></p>

<p>Now, The stack top contains the address of the string:</p>

<p><img src="/assets/screenshots/2-4-4-stack-top.png" alt="2-4-4-stack-top" /></p>

<p>The program will pop the string address and save to <code class="language-plaintext highlighter-rouge">esi</code> register after the instruction <code class="language-plaintext highlighter-rouge">pop esi</code>. <code class="language-plaintext highlighter-rouge">esi</code> register now holds the address of the string.</p>

<p><img src="/assets/screenshots/2-4-5-esi-holds-string-addr.png" alt="2-4-5-esi-holds-string-addr" /></p>

<p>Then, the program copys the string address to <code class="language-plaintext highlighter-rouge">ebx</code> register, ready to be used as first argument of <code class="language-plaintext highlighter-rouge">execve </code> system call.</p>

<p>The first 7 characters in the string contains the filename of the shell program we want to run in the shellcode. To construct the filename string, the program rewrites the memory at <code class="language-plaintext highlighter-rouge">[ebx+7]</code> with <code class="language-plaintext highlighter-rouge">\0</code> to terminate the filename string.</p>

<p><img src="/assets/screenshots/2-4-6-turncate-string.png" alt="2-4-6-turncate-string" /></p>

<p>Next, the program saves the address of string <code class="language-plaintext highlighter-rouge">/bin/sh</code> to the memory at <code class="language-plaintext highlighter-rouge">[ebx+8]</code>, ready to construct the <code class="language-plaintext highlighter-rouge">argv</code> array.</p>

<p><img src="/assets/screenshots/2-4-7-argv.png" alt="2-4-7-argv" /></p>

<p>The program terminate the <code class="language-plaintext highlighter-rouge">argv</code> array with <code class="language-plaintext highlighter-rouge">0</code> at <code class="language-plaintext highlighter-rouge">[ebx+12]</code> and assigns the <code class="language-plaintext highlighter-rouge">ecx</code> register with the <code class="language-plaintext highlighter-rouge">argv</code> array.</p>

<p><img src="/assets/screenshots/2-4-8-argv-array.png" alt="2-4-8-argv-array" /></p>

<p>The program save <code class="language-plaintext highlighter-rouge">0</code> to <code class="language-plaintext highlighter-rouge">edx</code> for no environment variable is passed to the shell program.</p>

<p><img src="/assets/screenshots/2-4-9-no-envp.png" alt="2-4-9-no-envp" /></p>

<p>In the last, the program save <code class="language-plaintext highlighter-rouge">0x0b</code> to <code class="language-plaintext highlighter-rouge">eax</code> and invokes a system call interrupt to spawn a shell.</p>

<p><img src="/assets/screenshots/2-4-10-sh.png" alt="2-4-10-sh" /></p>

<p><code class="language-plaintext highlighter-rouge">src/task2/labsh_rel.asm</code></p>

<pre><code class="language-assembly">section .text
global _start
_start:
      	jmp two
one:
				pop esi
        mov ebx, esi 						; (complete) ebx should contain the string address
				mov eax, 0
        mov byte [ebx+7], 0x00  ; (complete) terminate /bin/sh with 0x00 (1 byte)
        mov [ebx+8], ebx   			; (complete) save ebx to memory at addressebx+8, points to "/bin/sh" saved at $ebx
        mov [ebx+12], eax  			; (complete) save eax to memory at address ebx+12, terminates the argv[]
        lea ecx, [ebx+8]   			; let ecx = ebx + 8
        
				mov edx, 0
        mov al, 0x0b
        int 0x80
				;	execve("/bin/sh", ["/bin/sh"], NULL)
two:
        call one
        db "/bin/sh*AAAABBBB"		; "/bin/sh" and remaining characters as placeholder
</code></pre>

<p>Since this program is required for writable code segment, to produce a executable binary file for this program, we need to use the <code class="language-plaintext highlighter-rouge">--omagic</code> flag to enable <code class="language-plaintext highlighter-rouge">ld</code> to do so.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nasm <span class="nt">-f</span> elf32 ./src/task2/labsh.rel.asm
ld <span class="nt">--omagic</span> ./src/task2/labsh_rel.o <span class="nt">-o</span> labsh_rel
./labsh_rel
</code></pre></div></div>]]></content><author><name>jianing</name></author><category term="buffer overflow" /><summary type="html"><![CDATA[1. Printing on the Screen]]></summary></entry></feed>